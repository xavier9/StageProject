Index: app/libs/LICENSE-LGPLv2.1.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/libs/LICENSE-LGPLv2.1.txt	(revision )
+++ app/libs/LICENSE-LGPLv2.1.txt	(revision )
@@ -0,0 +1,504 @@
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+ 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms of the
+ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.  It is
+safest to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the library, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app'
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision )
+++ .idea/runConfigurations.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_roster.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_roster.xml	(revision )
+++ app/src/main/res/layout/fragment_roster.xml	(revision )
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.stageproject.MessageActivity">
+    <android.support.design.widget.TabLayout
+        android:id="@+id/tab_layout1"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+
+        android:background="?attr/colorPrimary"
+
+        android:minHeight="?attr/actionBarSize"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+    <android.support.v4.view.ViewPager
+        android:id="@+id/pager1"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/tab_layout1">
+    <!--<FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_gravity="bottom"
+        android:foregroundGravity="bottom"
+        android:layout_below="@+id/tab_layout1">
+
+        <include layout="@layout/roster"/>
+    </FrameLayout>-->
+    </android.support.v4.view.ViewPager>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/message.xml	(revision )
+++ app/src/main/res/layout/message.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.stageproject.MessageActivity">
+
+    <ListView
+        android:id="@android:id/list"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:footerDividersEnabled="true"
+        android:divider="@android:color/background_dark"
+        android:dividerHeight="10.0sp"/>
+
+</RelativeLayout>
Index: app/src/main/java/com/example/xavier/stageproject/Roster/BitmapLruCache.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/BitmapLruCache.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/BitmapLruCache.java	(revision )
@@ -0,0 +1,47 @@
+/**
+ * Copyright 2013 Ognyan Bankov
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.example.xavier.stageproject.Roster;
+
+import android.graphics.Bitmap;
+import android.support.v4.util.LruCache;
+
+import com.android.volley.toolbox.ImageLoader.ImageCache;
+
+
+public class BitmapLruCache extends LruCache<String, Bitmap> implements ImageCache {
+    public BitmapLruCache(int maxSize) {
+        super(maxSize);
+    }
+
+
+    @Override
+    protected int sizeOf(String key, Bitmap value) {
+        return value.getRowBytes() * value.getHeight();
+    }
+
+
+    @Override
+    public Bitmap getBitmap(String url) {
+        return get(url);
+    }
+
+
+    @Override
+    public void putBitmap(String url, Bitmap bitmap) {
+        put(url, bitmap);
+    }
+}
Index: app/src/test/java/com/example/xavier/stageproject/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/example/xavier/stageproject/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/example/xavier/stageproject/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package com.example.xavier.stageproject;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Roster/DondeDagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/DondeDagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/DondeDagFragment.java	(revision )
@@ -0,0 +1,210 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import java.util.ArrayList;
+
+public class DondeDagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+
+    // contacts JSONArray
+    JSONArray contacts = null;    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.roster, container, false);
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        // display response
+                        //Log.d("Response", response.toString());
+                        /*pDialog = new ProgressDialog(getActivity());
+                        pDialog.setMessage("Please wait...");
+                        pDialog.setCancelable(false);
+                        pDialog.show();
+                        Courses c = new Courses();*/
+                        // JSONArray json = new JSONArray();
+
+
+
+                        try {
+                            //JSONObject jsonObj = new JSONObject(jsonStr);
+                            //json = response.getJSONArray("courses");
+                            //Log.e("JsonArray", json.toString());
+                            contacts = response.getJSONArray("courses");
+
+                            // looping through All Contacts
+
+
+
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+                            Bundle extra = getActivity().getIntent().getExtras();
+
+                            int test = extra.getInt("studentid");
+                            //Log.e("screen", String.valueOf(test));
+
+
+                            for (Courses ct : contactList) {
+                                if (ct.getStudent_id() == test) {
+                                    courses.add(ct);
+                                }
+                            }
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) getActivity().findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) getActivity().findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) getActivity().findViewById(R.id.Derdelesuur);
+                            vier = (TextView) getActivity().findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) getActivity().findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) getActivity().findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) getActivity().findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) getActivity().findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) getActivity().findViewById(R.id.Neegendelesuur);
+                            for (Courses c : courses) {
+                                switch (c.getDag()) {
+
+                                    case 4:
+                                        switch (c.getPeriod()) {
+                                            case 1:
+
+                                                één.setText(c.toString());
+                                                break;
+                                            case 2:
+                                                twee.setText(c.toString());
+                                                break;
+                                            case 3:
+                                                drie.setText(c.toString());
+                                                break;
+                                            case 4:
+                                                vier.setText(c.toString());
+                                                break;
+                                            case 5:
+                                                vijf.setText(c.toString());
+                                                break;
+                                            case 6:
+                                                zes.setText(c.toString());
+                                                break;
+                                            case 7:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 8:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 9:
+                                                negen.setText(c.toString());
+                                                break;
+                                        }
+                                        break;
+
+                                }
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        );
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(500000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        queue.add(getRequest);
+        return rootView;
+    }
+
+}
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/java/com/example/xavier/stageproject/Mysql/ServiceHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Mysql/ServiceHandler.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Mysql/ServiceHandler.java	(revision )
@@ -0,0 +1,87 @@
+package com.example.xavier.stageproject.Mysql;
+
+import java.io.IOException;
+import java.io.UnsupportedEncodingException;
+import java.util.List;
+
+import org.apache.http.HttpEntity;
+import org.apache.http.HttpResponse;
+import org.apache.http.NameValuePair;
+import org.apache.http.client.ClientProtocolException;
+import org.apache.http.client.entity.UrlEncodedFormEntity;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.methods.HttpPost;
+import org.apache.http.client.utils.URLEncodedUtils;
+import org.apache.http.impl.client.DefaultHttpClient;
+import org.apache.http.util.EntityUtils;
+
+public class ServiceHandler {
+
+    static String response = null;
+    public final static int GET = 1;
+    public final static int POST = 2;
+
+    public ServiceHandler() {
+
+    }
+
+    /**
+     * Making service call
+     * @url - url to make request
+     * @method - http request method
+     * */
+    public String makeServiceCall(String url, int method) {
+        return this.makeServiceCall(url, method, null);
+    }
+
+    /**
+     * Making service call
+     * @url - url to make request
+     * @method - http request method
+     * @params - http request params
+     * */
+    public String makeServiceCall(String url, int method,
+                                  List<NameValuePair> params) {
+        try {
+            // http client
+            DefaultHttpClient httpClient = new DefaultHttpClient();
+            HttpEntity httpEntity = null;
+            HttpResponse httpResponse = null;
+
+            // Checking http request method type
+            if (method == POST) {
+                HttpPost httpPost = new HttpPost(url);
+                // adding post params
+                if (params != null) {
+                    httpPost.setEntity(new UrlEncodedFormEntity(params));
+                }
+
+                httpResponse = httpClient.execute(httpPost);
+
+            } else if (method == GET) {
+                // appending params to url
+                if (params != null) {
+                    String paramString = URLEncodedUtils
+                            .format(params, "utf-8");
+                    url += "?" + paramString;
+                }
+                HttpGet httpGet = new HttpGet(url);
+
+                httpResponse = httpClient.execute(httpGet);
+
+            }
+            httpEntity = httpResponse.getEntity();
+            response = EntityUtils.toString(httpEntity);
+
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+        } catch (ClientProtocolException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return response;
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <color name="black">#000</color>
+    <color name="whith">#fff</color>
+    <color name="colorPrimary">#125688</color>
+    <color name="colorPrimaryDark">#125688</color>
+    <color name="textColorPrimary">#FFFFFF</color>
+    <color name="windowBackground">#FFFFFF</color>
+    <color name="navigationBarColor">#000000</color>
+    <color name="colorAccent">#c8e8ff</color>
+</resources>
Index: app/src/main/res/drawable/ic_refresh_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_refresh_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_refresh_white_24dp.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:viewportHeight="24.0" android:viewportWidth="24.0" android:width="24dp">
+    <path android:fillColor="#FFFFFF" android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z"/>
+</vector>
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in C:\Users\xavier\Desktop\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/java/com/example/xavier/stageproject/LDAP/LdapServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/LDAP/LdapServer.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/LDAP/LdapServer.java	(revision )
@@ -0,0 +1,37 @@
+package com.example.xavier.stageproject.LDAP;
+
+/**
+ * Created by xavier on 23/02/2016.
+ */
+import com.unboundid.ldap.sdk.LDAPConnection;
+
+public class LdapServer {
+
+    // The port number of the directory server.
+    private static final int PORT = 389;
+
+    // The base DN to use when searching the server.
+    public static final String BASE_DN = "ou=Users,dc=eeb2,dc=be";
+
+    // The address of the directory server.
+    private static final String HOST = "openldap.eeb2.be";
+
+    private static final String BIND_DN = "domain\\username";
+    private static final String BIND_PW = "123456";
+
+    private static LDAPConnection conn;
+
+    public static LDAPConnection getConnection() {
+        if (conn == null) {
+            try {
+
+                conn = new LDAPConnection(HOST, PORT, BIND_DN, BIND_PW);
+            } catch (Exception e) {
+
+            }
+        }
+
+        return conn;
+    }
+
+}
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,31 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+    <style name="MyMaterialTheme" parent="MyMaterialTheme.Base">
+
+    </style>
+
+    <style name="MyMaterialTheme.Base" parent="Theme.AppCompat.Light.DarkActionBar">
+        <item name="windowNoTitle">true</item>
+        <item name="windowActionBar">false</item>
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: app/src/main/java/com/example/xavier/stageproject/MessageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/MessageActivity.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/MessageActivity.java	(revision )
@@ -0,0 +1,174 @@
+package com.example.xavier.stageproject;
+
+import android.app.ListActivity;
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.Snackbar;
+import android.support.v4.app.ListFragment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ListAdapter;
+
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Classes.Message;
+import com.example.xavier.stageproject.Listadaptor.MessageArrayAdapter;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+public class MessageActivity extends ListFragment {
+
+    private ProgressDialog pDialog;
+    ArrayList<Message> productsList;
+    // URL to get contacts JSON
+    private static String url = Global.URL + Global.Message;
+
+    // JSON Node names
+    private static final String TAG_Table = "message";
+    private static final String TAG_ID = "message_ID";
+    private static final String TAG_NAME = "message";
+    private static final String TAG_Visible = "visibility";
+
+
+    // contacts JSONArray
+    JSONArray contacts = null;
+
+    // Hashmap for ListView
+    ArrayList<Message> contactList;
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        View rootView = inflater.inflate(R.layout.message, container, false);
+        contactList = new ArrayList<Message>();
+        new GetMessages().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
+        return rootView;
+    }
+
+    /**
+     * Async task class to get json by making HTTP call
+     * */
+    private class GetMessages extends AsyncTask<Void, Void, Void> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            // Showing progress dialog
+            pDialog = new ProgressDialog(getActivity());
+            pDialog.setMessage("Please wait...");
+            pDialog.setCancelable(false);
+            pDialog.show();
+
+        }
+
+        @Override
+        protected Void doInBackground(Void... arg0) {
+            // Creating service handler class instance
+            ServiceHandler sh = new ServiceHandler();
+
+            // Making a request to url and getting response
+            String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);
+
+            //Log.d("Response: ", "> " + jsonStr);
+
+            if (jsonStr != null) {
+                try {
+                    JSONObject jsonObj = new JSONObject(jsonStr);
+
+                    // Getting JSON Array node
+                    contacts = jsonObj.getJSONArray(TAG_Table);
+
+                    // looping through All Contacts
+                    for (int i = 0; i < contacts.length(); i++) {
+                        JSONObject c = contacts.getJSONObject(i);
+
+                        int id = c.getInt(TAG_ID);
+                        //Log.e("ID", String.valueOf(id));
+                        String name = c.getString(TAG_NAME);
+                       // Log.e("Boolean", c.getString(TAG_Visible));
+                        boolean vis = false;
+                        switch (c.getString(TAG_Visible)){
+                            case "0":
+                                vis = false;
+                                break;
+                            case "1":
+                                vis = true;
+                                break;
+                        }
+                        int screen = c.getInt("screen_ID");
+
+
+
+                        // tmp hashmap for single contact
+                        Message contact = new Message();
+
+                        // adding each child node to HashMap key => value
+                        contact.setID(id);
+                        contact.setMessage(name);
+                        contact.setVisible(vis);
+                        contact.setScreen(screen);
+
+
+                        // adding contact to contact list
+                        contactList.add(contact);
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            } else {
+                Log.e("ServiceHandler", "Couldn't get any data from the url");
+            }
+
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Void result) {
+            super.onPostExecute(result);
+            // Dismiss the progress dialog
+            if (pDialog.isShowing())
+                pDialog.dismiss();
+            /**
+             * Updating parsed JSON data into ListView
+             * */
+            ArrayList<Message> contacts =new ArrayList<Message>();
+            for(int i  = 0; i < contactList.size(); i++){
+                //Log.i("Test", contactList.get(i).get(TAG_NAME));
+                //Log.i("Test", contactList.get(i).toString());
+                //Log.e("Visible", contactList.get(i).get(TAG_Visible));
+                Bundle extra = getActivity().getIntent().getExtras();
+                int test = extra.getInt("screen");
+               // Log.e("screen", String.valueOf(test));
+                if(contactList.get(i).getVisible() && contactList.get(i).getScreen() == test){
+                    contacts.add(contactList.get(i));
+                    //Log.e("visible", "visible");
+
+                }
+
+
+
+            }
+
+            //Log.e("Size", String.valueOf(contact.length));
+            ListAdapter adapter = new MessageArrayAdapter(getActivity(),contacts);
+            // updating listview
+            setListAdapter(adapter);
+        }
+
+    }
+
+}
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(revision )
+++ .idea/inspectionProfiles/profiles_settings.xml	(revision )
@@ -0,0 +1,7 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="PROJECT_PROFILE" value="Project Default" />
+    <option name="USE_PROJECT_PROFILE" value="true" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision )
+++ gradle/wrapper/gradle-wrapper.properties	(revision )
@@ -0,0 +1,6 @@
+#Wed Oct 21 11:34:03 PDT 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
Index: app/src/main/java/com/example/xavier/stageproject/Roster/RosterFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/RosterFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/RosterFragment.java	(revision )
@@ -0,0 +1,71 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.design.widget.TabLayout;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentTabHost;
+import android.support.v4.view.ViewPager;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TableRow;
+
+import com.example.xavier.stageproject.R;
+import com.example.xavier.stageproject.adapter.PagerAdapter;
+import com.example.xavier.stageproject.adapter.PagerAdapter1;
+
+public class RosterFragment extends Fragment {
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.fragment_roster, container, false);
+        TabLayout tabLayout1 = (TabLayout) rootView.findViewById(R.id.tab_layout1);
+        tabLayout1.addTab(tabLayout1.newTab().setText("Mon"));
+        tabLayout1.addTab(tabLayout1.newTab().setText("Tue"));
+        tabLayout1.addTab(tabLayout1.newTab().setText("Wens"));
+        tabLayout1.addTab(tabLayout1.newTab().setText("Thu"));
+        tabLayout1.addTab(tabLayout1.newTab().setText("Fri"));
+        tabLayout1.setTabGravity(TabLayout.GRAVITY_FILL);
+
+
+
+        final ViewPager viewPager1 = (ViewPager) rootView.findViewById(R.id.pager1);
+        final PagerAdapter1 adapter = new PagerAdapter1
+                ( getChildFragmentManager(), tabLayout1.getTabCount());
+        viewPager1.setAdapter(adapter);
+
+        viewPager1.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout1));
+        tabLayout1.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab1) {
+                Log.e("Tab2", String.valueOf(tab1.getPosition()));
+                viewPager1.setCurrentItem(tab1.getPosition());
+
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+
+            }
+        });
+
+
+
+        return  rootView;
+    }
+}
+
+
+
+
+
Index: app/src/main/java/com/example/xavier/stageproject/Links.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Links.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Links.java	(revision )
@@ -0,0 +1,75 @@
+package com.example.xavier.stageproject;
+
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+
+
+public class Links extends Fragment implements View.OnClickListener{
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View view = inflater.inflate(R.layout.fragment_links, container, false);
+
+        //Find the +1 button
+        view.findViewById(R.id.Zimbra).setOnClickListener(this);
+        view.findViewById(R.id.Learning).setOnClickListener(this);
+        view.findViewById(R.id.Alumni).setOnClickListener(this);
+        view.findViewById(R.id.Pupils).setOnClickListener(this);
+        view.findViewById(R.id.Blog).setOnClickListener(this);
+        return view;
+    }
+
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()){
+            case R.id.Zimbra:
+                //Intent intent = new Intent();
+                Uri uri = Uri.parse("http://zimbra.eeb2.be/"); // missing 'http://' will cause crashed
+                Log.e("URL", uri.toString());
+                Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+                startActivity(intent);
+
+                //intent.setAction(Intent.ACTION_VIEW);
+                //intent.addCategory(Intent.CATEGORY_BROWSABLE);
+                //intent.setData(Uri.parse(String.valueOf(R.string.URL_Zimbra)));
+                //startActivity(intent);
+                break;
+            case R.id.Learning:
+                uri = Uri.parse("https://esb.itslearning.com/"); // missing 'http://' will cause crashed
+                Log.e("URL", uri.toString());
+                intent = new Intent(Intent.ACTION_VIEW, uri);
+                startActivity(intent);
+                break;
+            case R.id.Alumni:
+                uri = Uri.parse("http://www.alumnieuropae.org/"); // missing 'http://' will cause crashed
+                Log.e("URL", uri.toString());
+                intent = new Intent(Intent.ACTION_VIEW, uri);
+                startActivity(intent);
+                break;
+            case R.id.Pupils:
+                uri = Uri.parse("https://www.facebook.com/EuropeanSchoolBrusselsII"); // missing 'http://' will cause crashed
+                Log.e("URL", uri.toString());
+                intent = new Intent(Intent.ACTION_VIEW, uri);
+                startActivity(intent);
+                break;
+            case R.id.Blog:
+                uri = Uri.parse("http://woluweindependent.blogspot.be/"); // missing 'http://' will cause crashed
+                Log.e("URL", uri.toString());
+                intent = new Intent(Intent.ACTION_VIEW, uri);
+                startActivity(intent);
+                break;
+        }
+
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,61 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23 //update this to 23
+    buildToolsVersion "23.0.2"
+    useLibrary 'org.apache.http.legacy'
+    defaultConfig {
+        applicationId "com.xavier.StageProject"
+        minSdkVersion 15
+        targetSdkVersion 23
+        multiDexEnabled true //enable this
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+    dexOptions {
+        incremental true
+        javaMaxHeapSize "2048M"
+    }
+
+}
+
+
+
+
+
+allprojects {
+    repositories {
+        mavenCentral() // Add following
+        jcenter()
+    }
+}
+
+
+
+dependencies {
+    // update these to 23 if you have them and add the multidex
+    compile files('libs/jna-4.1.0.jar')
+    compile files('libs/jna-platform-4.1.0.jar')
+    compile files('libs/unboundid-ldapsdk-se.jar')
+    compile 'com.android.support:multidex:1.0.1'
+    compile 'com.android.support:support-v13:23.2.0'
+    compile 'com.android.support:support-v4:23.2.0'
+    compile 'com.android.support:design:23.2.0'
+    compile 'com.android.support:appcompat-v7:23.2.0'
+    compile files('libs/retrofit-2.0.0-beta4.jar')
+    compile files('libs/converter-gson-2.0.0-beta1.jar')
+    compile files('libs/gson-2.6.2.jar')
+    compile files('libs/retrofit-2.0.0-beta2.jar')
+    compile files('libs/okhttp-3.2.0.jar')
+    compile files('libs/library-1.0.19.jar')
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Listadaptor/MessageArrayAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Listadaptor/MessageArrayAdapter.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Listadaptor/MessageArrayAdapter.java	(revision )
@@ -0,0 +1,65 @@
+package com.example.xavier.stageproject.Listadaptor;
+
+import android.content.Context;
+import android.text.Html;
+import android.text.Spanned;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.webkit.WebChromeClient;
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.widget.ArrayAdapter;
+import android.widget.TextView;
+
+import com.example.xavier.stageproject.Classes.Message;
+import com.example.xavier.stageproject.R;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+/**
+ * Created by xavier on 19/02/2016.
+ */
+public class MessageArrayAdapter extends ArrayAdapter<Message> {
+    private final Context context;
+    private final ArrayList<Message> values;
+
+    public MessageArrayAdapter(Context context, ArrayList<Message> values) {
+        super(context, R.layout.list_item, values);
+        this.context = context;
+        this.values = values;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        LayoutInflater inflater = (LayoutInflater) context
+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        View rowView = inflater.inflate(R.layout.list_item, parent, false);
+       // WebView textView = (WebView) rowView.findViewById(R.id.webView);
+        //ImageView imageView = (ImageView) rowView.findViewById(R.id.icon);
+       // Log.e("Lengte", String.valueOf(values.size()));
+        Message summary = values.get(position);
+        //Log.e("web", summary.toString());
+
+
+        //textView.setWebChromeClient(new WebChromeClient());
+        Spanned marked_up = Html.fromHtml(summary.getMessage());
+        /*textView.loadData(summary.getMessage(), "text/html", "utf-8");
+        textView.getSettings().setJavaScriptEnabled(true);
+        textView.getSettings().setBuiltInZoomControls(false);
+        textView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
+        textView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);*/
+        ((TextView) rowView.findViewById(R.id.textView)).setText(marked_up);
+        //change the icon for Windows and iPhone
+        //String s = values[position];
+        /*if (s.startsWith("iPhone")) {
+            imageView.setImageResource(R.drawable.no);
+        } else {
+            imageView.setImageResource(R.drawable.ok);
+        }*/
+
+        return rowView;
+    }
+}
Index: app/src/main/res/drawable/ic_exit_to_app_white_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_exit_to_app_white_24dp.xml	(revision )
+++ app/src/main/res/drawable/ic_exit_to_app_white_24dp.xml	(revision )
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:viewportHeight="24.0" android:viewportWidth="24.0" android:width="24dp">
+    <path android:fillColor="#FFFFFF" android:pathData="M10.09,15.59L11.5,17l5,-5 -5,-5 -1.41,1.41L12.67,11H3v2h9.67l-2.58,2.59zM19,3H5c-1.11,0 -2,0.9 -2,2v4h2V5h14v14H5v-4H3v4c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2V5c0,-1.1 -0.9,-2 -2,-2z"/>
+</vector>
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision )
+++ .idea/inspectionProfiles/Project_Default.xml	(revision )
@@ -0,0 +1,10 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="AndroidLintWebViewLayout" enabled="false" level="ERROR" enabled_by_default="false" />
+    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="false" level="WARNING" enabled_by_default="false">
+      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger" />
+      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger" />
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: app/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/ids.xml	(revision )
+++ app/src/main/res/values/ids.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <item name="fab" type="id">fab</item>
+    <item name="text_view" type="id">outpute</item>
+    <item name="pid" type="id">1</item>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Classes/Absence.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Classes/Absence.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Classes/Absence.java	(revision )
@@ -0,0 +1,84 @@
+package com.example.xavier.stageproject.Classes;
+
+/**
+ * Created by xavier on 22/02/2016.
+ */
+public class Absence {
+    int ID, reason;
+    String title, name, hours, date, note;
+
+    public Absence() {
+    }
+
+    public Absence(int ID, int reason, String title, String name, String hours, String date, String note) {
+        this.ID = ID;
+        this.reason = reason;
+        this.title = title;
+        this.name = name;
+        this.hours = hours;
+        this.date = date;
+        this.note = note;
+    }
+
+    public int getID() {
+        return ID;
+    }
+
+    public void setID(int ID) {
+        this.ID = ID;
+    }
+
+    public int getReason() {
+        return reason;
+    }
+
+    public void setReason(int reason) {
+        this.reason = reason;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getHours() {
+        return hours;
+    }
+
+    public void setHours(String hours) {
+        this.hours = hours;
+    }
+
+    public String getDate() {
+        return date;
+    }
+
+    public void setDate(String date) {
+        this.date = date;
+    }
+
+    public String getNote() {
+        return note;
+    }
+
+    public void setNote(String note) {
+        this.note = note;
+    }
+
+    @Override
+    public String toString() {
+        return
+                 name + "(" + hours + ")";
+    }
+}
Index: app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter.java	(revision )
@@ -0,0 +1,49 @@
+package com.example.xavier.stageproject.adapter;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+
+import com.example.xavier.stageproject.AbsenceActivity;
+import com.example.xavier.stageproject.Links;
+import com.example.xavier.stageproject.MessageActivity;
+import com.example.xavier.stageproject.Roster.RosterFragment;
+
+
+import android.support.v4.app.FragmentStatePagerAdapter;
+
+public class PagerAdapter extends FragmentStatePagerAdapter {
+	int mNumOfTabs;
+
+	public PagerAdapter(FragmentManager fm, int NumOfTabs) {
+		super(fm);
+		this.mNumOfTabs = NumOfTabs;
+	}
+
+	@Override
+	public Fragment getItem(int position) {
+
+		switch (position) {
+			case 0:
+				MessageActivity tab1 = new MessageActivity();
+				return tab1;
+			case 1:
+				AbsenceActivity tab2 = new AbsenceActivity();
+				return tab2;
+			case 2:
+				RosterFragment tab4 = new RosterFragment();
+				return tab4;
+			case 3:
+				Links tab3 = new Links();
+				return tab3;
+
+
+			default:
+				return null;
+		}
+	}
+
+	@Override
+	public int getCount() {
+		return mNumOfTabs;
+	}
+}
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/interfaces/CourcesAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/interfaces/CourcesAPI.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/interfaces/CourcesAPI.java	(revision )
@@ -0,0 +1,20 @@
+package com.example.xavier.stageproject.interfaces;
+
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import retrofit.http.GET;
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.http.Query;
+
+/**
+ * Created by xavier on 4/03/2016.
+ */
+public interface CourcesAPI {
+    @GET(Global.Cources)
+    public Call<Courses> getBooks(@Query("student_id") String student_id);
+}
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.name	(revision )
+++ .idea/.name	(revision )
@@ -0,0 +1,1 @@
+StageProject
\ No newline at end of file
Index: app/src/main/res/layout/list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_item.xml	(revision )
+++ app/src/main/res/layout/list_item.xml	(revision )
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="10dp"
+    android:paddingLeft="10dp"
+    android:paddingRight="10dp" >
+
+    <!-- Name Label -->
+
+    <!-- Email label -->
+
+    <!-- Mobile number label -->
+
+    <!--<WebView
+        android:layout_width="match_parent"
+        android:id="@+id/webView"
+        android:layout_height="wrap_content" />-->
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="New Text"
+        android:id="@+id/textView"
+        android:visibility="visible"
+        android:textSize="20dp" />
+</LinearLayout>
\ No newline at end of file
Index: .idea/dbnavigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dbnavigator.xml	(revision )
+++ .idea/dbnavigator.xml	(revision )
@@ -0,0 +1,529 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DBNavigator.Project.DataEditorManager">
+    <record-view-column-sorting-type value="BY_INDEX" />
+    <value-preview-text-wrapping value="false" />
+    <value-preview-pinned value="false" />
+  </component>
+  <component name="DBNavigator.Project.DataExportManager">
+    <export-instructions>
+      <create-header value="true" />
+      <quote-values-containing-separator value="true" />
+      <quote-all-values value="false" />
+      <value-separator value="" />
+      <file-name value="" />
+      <file-location value="" />
+      <scope value="GLOBAL" />
+      <destination value="FILE" />
+      <format value="EXCEL" />
+      <charset value="windows-1252" />
+    </export-instructions>
+  </component>
+  <component name="DBNavigator.Project.DatabaseBrowserManager">
+    <autoscroll-to-editor value="false" />
+    <autoscroll-from-editor value="true" />
+    <show-object-properties value="true" />
+    <loaded-nodes />
+  </component>
+  <component name="DBNavigator.Project.DatabaseConsoleManager">
+    <connection id="0fe7ac8a-baca-4963-aa66-a32e7a5d5199">
+      <console name="Connection" type="STANDARD" />
+    </connection>
+  </component>
+  <component name="DBNavigator.Project.EditorStateManager">
+    <last-used-providers />
+  </component>
+  <component name="DBNavigator.Project.MethodExecutionManager">
+    <method-browser />
+    <execution-history>
+      <group-entries value="true" />
+      <execution-inputs />
+    </execution-history>
+    <argument-values-cache />
+  </component>
+  <component name="DBNavigator.Project.ObjectDependencyManager">
+    <last-used-dependency-type value="INCOMING" />
+  </component>
+  <component name="DBNavigator.Project.ObjectQuickFilterManager">
+    <last-used-operator value="EQUAL" />
+    <filters />
+  </component>
+  <component name="DBNavigator.Project.ScriptExecutionManager" clear-outputs="true">
+    <recently-used-interfaces />
+  </component>
+  <component name="DBNavigator.Project.Settings">
+    <connections>
+      <connection id="0fe7ac8a-baca-4963-aa66-a32e7a5d5199" active="true">
+        <database>
+          <name value="Connection" />
+          <description value="" />
+          <database-type value="MYSQL" />
+          <config-type value="BASIC" />
+          <database-version value="5.1" />
+          <driver-source value="BUILTIN" />
+          <driver-library value="" />
+          <driver value="" />
+          <url-type value="DATABASE" />
+          <host value="10.1.0.53" />
+          <port value="3306" />
+          <database value="app_eeb2" />
+          <os-authentication value="false" />
+          <empty-password value="false" />
+          <user value="root" />
+          <password value="bmFpYm9qZWk=" />
+        </database>
+        <properties>
+          <auto-commit value="false" />
+        </properties>
+        <ssh-settings>
+          <active value="false" />
+          <proxy-host value="" />
+          <proxy-port value="22" />
+          <proxy-user value="" />
+          <proxy-password value="" />
+          <auth-type value="PASSWORD" />
+          <key-file value="" />
+          <key-passphrase value="" />
+        </ssh-settings>
+        <details>
+          <charset value="UTF-8" />
+          <ddl-file-binding value="true" />
+          <database-logging value="true" />
+          <environment-type value="default" />
+          <idle-time-to-disconnect value="30" />
+          <password-expiry-time value="10" />
+          <max-connection-pool-size value="7" />
+          <alternative-statement-delimiter value="" />
+          <connect-automatically value="true" />
+        </details>
+        <object-filters hide-empty-schemas="false">
+          <object-type-filter use-master-settings="true">
+            <object-type name="SCHEMA" enabled="true" />
+            <object-type name="USER" enabled="true" />
+            <object-type name="ROLE" enabled="true" />
+            <object-type name="PRIVILEGE" enabled="true" />
+            <object-type name="CHARSET" enabled="true" />
+            <object-type name="TABLE" enabled="true" />
+            <object-type name="VIEW" enabled="true" />
+            <object-type name="MATERIALIZED_VIEW" enabled="true" />
+            <object-type name="NESTED_TABLE" enabled="true" />
+            <object-type name="COLUMN" enabled="true" />
+            <object-type name="INDEX" enabled="true" />
+            <object-type name="CONSTRAINT" enabled="true" />
+            <object-type name="DATASET_TRIGGER" enabled="true" />
+            <object-type name="DATABASE_TRIGGER" enabled="true" />
+            <object-type name="SYNONYM" enabled="true" />
+            <object-type name="SEQUENCE" enabled="true" />
+            <object-type name="PROCEDURE" enabled="true" />
+            <object-type name="FUNCTION" enabled="true" />
+            <object-type name="PACKAGE" enabled="true" />
+            <object-type name="TYPE" enabled="true" />
+            <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+            <object-type name="ARGUMENT" enabled="true" />
+            <object-type name="DIMENSION" enabled="true" />
+            <object-type name="CLUSTER" enabled="true" />
+            <object-type name="DBLINK" enabled="true" />
+          </object-type-filter>
+          <object-name-filters />
+        </object-filters>
+      </connection>
+    </connections>
+    <browser-settings>
+      <general>
+        <display-mode value="TABBED" />
+        <navigation-history-size value="100" />
+        <show-object-details value="false" />
+      </general>
+      <filters>
+        <object-type-filter>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="true" />
+          <object-type name="ROLE" enabled="true" />
+          <object-type name="PRIVILEGE" enabled="true" />
+          <object-type name="CHARSET" enabled="true" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED_VIEW" enabled="true" />
+          <object-type name="NESTED_TABLE" enabled="true" />
+          <object-type name="COLUMN" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET_TRIGGER" enabled="true" />
+          <object-type name="DATABASE_TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="true" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+          <object-type name="ARGUMENT" enabled="true" />
+          <object-type name="DIMENSION" enabled="true" />
+          <object-type name="CLUSTER" enabled="true" />
+          <object-type name="DBLINK" enabled="true" />
+        </object-type-filter>
+      </filters>
+      <sorting>
+        <object-type name="COLUMN" sorting-type="NAME" />
+        <object-type name="FUNCTION" sorting-type="NAME" />
+        <object-type name="PROCEDURE" sorting-type="NAME" />
+        <object-type name="ARGUMENT" sorting-type="POSITION" />
+      </sorting>
+      <default-editors>
+        <object-type name="VIEW" editor-type="SELECTION" />
+        <object-type name="PACKAGE" editor-type="SELECTION" />
+        <object-type name="TYPE" editor-type="SELECTION" />
+      </default-editors>
+    </browser-settings>
+    <navigation-settings>
+      <lookup-filters>
+        <lookup-objects>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="false" />
+          <object-type name="ROLE" enabled="false" />
+          <object-type name="PRIVILEGE" enabled="false" />
+          <object-type name="CHARSET" enabled="false" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED VIEW" enabled="true" />
+          <object-type name="NESTED TABLE" enabled="false" />
+          <object-type name="COLUMN" enabled="false" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET TRIGGER" enabled="true" />
+          <object-type name="DATABASE TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="false" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="TYPE ATTRIBUTE" enabled="false" />
+          <object-type name="ARGUMENT" enabled="false" />
+          <object-type name="DIMENSION" enabled="false" />
+          <object-type name="CLUSTER" enabled="false" />
+          <object-type name="DBLINK" enabled="true" />
+        </lookup-objects>
+        <force-database-load value="false" />
+        <prompt-connection-selection value="true" />
+        <prompt-schema-selection value="true" />
+      </lookup-filters>
+    </navigation-settings>
+    <dataset-grid-settings>
+      <general>
+        <enable-zooming value="true" />
+      </general>
+      <sorting>
+        <nulls-first value="true" />
+        <max-sorting-columns value="4" />
+      </sorting>
+      <tracking-columns>
+        <columnNames value="" />
+        <visible value="true" />
+        <editable value="false" />
+      </tracking-columns>
+    </dataset-grid-settings>
+    <dataset-editor-settings>
+      <text-editor-popup>
+        <active value="false" />
+        <active-if-empty value="false" />
+        <data-length-threshold value="100" />
+        <popup-delay value="1000" />
+      </text-editor-popup>
+      <values-list-popup>
+        <show-popup-button value="true" />
+        <element-count-threshold value="1000" />
+        <data-length-threshold value="250" />
+      </values-list-popup>
+      <general>
+        <fetch-block-size value="100" />
+        <fetch-timeout value="30" />
+        <trim-whitespaces value="true" />
+        <convert-empty-strings-to-null value="true" />
+        <select-content-on-cell-edit value="true" />
+        <large-value-preview-active value="true" />
+      </general>
+      <filters>
+        <prompt-filter-dialog value="true" />
+        <default-filter-type value="BASIC" />
+      </filters>
+      <qualified-text-editor text-length-threshold="300">
+        <content-types>
+          <content-type name="Text" enabled="true" />
+          <content-type name="Properties" enabled="true" />
+          <content-type name="XML" enabled="true" />
+          <content-type name="DTD" enabled="true" />
+          <content-type name="HTML" enabled="true" />
+          <content-type name="XHTML" enabled="true" />
+          <content-type name="Java" enabled="true" />
+          <content-type name="SQL" enabled="true" />
+          <content-type name="PL/SQL" enabled="true" />
+          <content-type name="Groovy" enabled="true" />
+          <content-type name="AIDL" enabled="true" />
+          <content-type name="Manifest" enabled="true" />
+        </content-types>
+      </qualified-text-editor>
+      <record-navigation>
+        <navigation-target value="VIEWER" />
+      </record-navigation>
+    </dataset-editor-settings>
+    <code-editor-settings>
+      <general>
+        <show-object-navigation-gutter value="false" />
+        <show-spec-declaration-navigation-gutter value="true" />
+      </general>
+      <confirmations>
+        <save-changes value="false" />
+        <revert-changes value="true" />
+      </confirmations>
+    </code-editor-settings>
+    <code-completion-settings>
+      <filters>
+        <basic-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="false" />
+            <filter-element type="OBJECT" id="view" selected="false" />
+            <filter-element type="OBJECT" id="materialized view" selected="false" />
+            <filter-element type="OBJECT" id="index" selected="false" />
+            <filter-element type="OBJECT" id="constraint" selected="false" />
+            <filter-element type="OBJECT" id="trigger" selected="false" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="false" />
+            <filter-element type="OBJECT" id="procedure" selected="false" />
+            <filter-element type="OBJECT" id="function" selected="false" />
+            <filter-element type="OBJECT" id="package" selected="false" />
+            <filter-element type="OBJECT" id="type" selected="false" />
+            <filter-element type="OBJECT" id="dimension" selected="false" />
+            <filter-element type="OBJECT" id="cluster" selected="false" />
+            <filter-element type="OBJECT" id="dblink" selected="false" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </basic-filter>
+        <extended-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </extended-filter>
+      </filters>
+      <sorting enabled="true">
+        <sorting-element type="RESERVED_WORD" id="keyword" />
+        <sorting-element type="RESERVED_WORD" id="datatype" />
+        <sorting-element type="OBJECT" id="column" />
+        <sorting-element type="OBJECT" id="table" />
+        <sorting-element type="OBJECT" id="view" />
+        <sorting-element type="OBJECT" id="materialized view" />
+        <sorting-element type="OBJECT" id="index" />
+        <sorting-element type="OBJECT" id="constraint" />
+        <sorting-element type="OBJECT" id="trigger" />
+        <sorting-element type="OBJECT" id="synonym" />
+        <sorting-element type="OBJECT" id="sequence" />
+        <sorting-element type="OBJECT" id="procedure" />
+        <sorting-element type="OBJECT" id="function" />
+        <sorting-element type="OBJECT" id="package" />
+        <sorting-element type="OBJECT" id="type" />
+        <sorting-element type="OBJECT" id="dimension" />
+        <sorting-element type="OBJECT" id="cluster" />
+        <sorting-element type="OBJECT" id="dblink" />
+        <sorting-element type="OBJECT" id="schema" />
+        <sorting-element type="OBJECT" id="role" />
+        <sorting-element type="OBJECT" id="user" />
+        <sorting-element type="RESERVED_WORD" id="function" />
+        <sorting-element type="RESERVED_WORD" id="parameter" />
+      </sorting>
+      <format>
+        <enforce-code-style-case value="true" />
+      </format>
+    </code-completion-settings>
+    <execution-engine-settings>
+      <statement-execution>
+        <fetch-block-size value="100" />
+        <execution-timeout value="20" />
+        <debug-execution-timeout value="600" />
+        <focus-result value="false" />
+        <prompt-execution value="false" />
+      </statement-execution>
+      <script-execution>
+        <command-line-interfaces />
+        <execution-timeout value="300" />
+      </script-execution>
+      <method-execution>
+        <execution-timeout value="30" />
+        <debug-execution-timeout value="600" />
+        <parameter-history-size value="10" />
+      </method-execution>
+    </execution-engine-settings>
+    <operation-settings>
+      <transactions>
+        <uncommitted-changes>
+          <on-project-close value="ASK" />
+          <on-disconnect value="ASK" />
+          <on-autocommit-toggle value="ASK" />
+        </uncommitted-changes>
+        <multiple-uncommitted-changes>
+          <on-commit value="ASK" />
+          <on-rollback value="ASK" />
+        </multiple-uncommitted-changes>
+      </transactions>
+      <session-browser>
+        <disconnect-session value="ASK" />
+        <kill-session value="ASK" />
+        <reload-on-filter-change value="false" />
+      </session-browser>
+      <compiler>
+        <compile-type value="KEEP" />
+        <compile-dependencies value="ASK" />
+        <always-show-controls value="false" />
+      </compiler>
+      <debugger>
+        <debugger-type value="ASK" />
+        <use-generic-runners value="true" />
+      </debugger>
+    </operation-settings>
+    <ddl-file-settings>
+      <extensions>
+        <mapping file-type-id="VIEW" extensions="vw" />
+        <mapping file-type-id="TRIGGER" extensions="trg" />
+        <mapping file-type-id="PROCEDURE" extensions="prc" />
+        <mapping file-type-id="FUNCTION" extensions="fnc" />
+        <mapping file-type-id="PACKAGE" extensions="pkg" />
+        <mapping file-type-id="PACKAGE_SPEC" extensions="pks" />
+        <mapping file-type-id="PACKAGE_BODY" extensions="pkb" />
+        <mapping file-type-id="TYPE" extensions="tpe" />
+        <mapping file-type-id="TYPE_SPEC" extensions="tps" />
+        <mapping file-type-id="TYPE_BODY" extensions="tpb" />
+      </extensions>
+      <general>
+        <lookup-ddl-files value="true" />
+        <create-ddl-files value="false" />
+        <synchronize-ddl-files value="true" />
+        <use-qualified-names value="false" />
+        <make-scripts-rerunnable value="true" />
+      </general>
+    </ddl-file-settings>
+    <general-settings>
+      <regional-settings>
+        <date-format value="MEDIUM" />
+        <number-format value="UNGROUPED" />
+        <locale value="SYSTEM_DEFAULT" />
+        <use-custom-formats value="false" />
+      </regional-settings>
+      <environment>
+        <environment-types>
+          <environment-type id="development" name="Development" description="Development environment" color="-2430209/-12296320" readonly-code="false" readonly-data="false" />
+          <environment-type id="integration" name="Integration" description="Integration environment" color="-2621494/-12163514" readonly-code="true" readonly-data="false" />
+          <environment-type id="production" name="Production" description="Productive environment" color="-11574/-10271420" readonly-code="true" readonly-data="true" />
+          <environment-type id="other" name="Other" description="" color="-1576/-10724543" readonly-code="false" readonly-data="false" />
+        </environment-types>
+        <visibility-settings>
+          <connection-tabs value="true" />
+          <dialog-headers value="true" />
+          <object-editor-tabs value="true" />
+          <script-editor-tabs value="false" />
+          <execution-result-tabs value="true" />
+        </visibility-settings>
+      </environment>
+    </general-settings>
+  </component>
+  <component name="DBNavigator.Project.StatementExecutionManager">
+    <execution-variables />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,11 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+    <dimen name="tab_max_width">264dp</dimen>
+<dimen name="tab_padding_bottom">16dp</dimen>
+<dimen name="tab_label">14sp</dimen>
+<dimen name="custom_tab_layout_height">72dp</dimen>
+
+</resources>
Index: app/src/main/res/layout/fragment_links.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_links.xml	(revision )
+++ app/src/main/res/layout/fragment_links.xml	(revision )
@@ -0,0 +1,47 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".Links">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/URL_Zimbra"
+            android:id="@+id/Zimbra"
+            android:textColor="#3054e6" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/URL_Learning"
+            android:id="@+id/Learning"
+            android:textColor="#3054e6" />
+
+        <Button
+            android:layout_width="396dp"
+            android:layout_height="wrap_content"
+            android:text="@string/URL_Alumni"
+            android:id="@+id/Alumni"
+            android:textColor="#3054e6" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/URL_Pupils_Facebook"
+            android:id="@+id/Pupils"
+            android:textColor="#3054e6" />
+
+        <Button
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@string/URL_Blog"
+            android:id="@+id/Blog"
+            android:textColor="#3054e6" />
+    </LinearLayout>
+</FrameLayout>
Index: app/src/main/res/layout/roster.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/roster.xml	(revision )
+++ app/src/main/res/layout/roster.xml	(revision )
@@ -0,0 +1,273 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/scrollView2" >
+
+        <TableLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border"
+                android:layout_weight="1">
+
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="1"
+                    android:id="@+id/textView2"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="@string/één"
+                    android:id="@+id/Eerste_uur"
+                    android:layout_column="1"
+                    android:layout_weight="1" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Eerstelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border"
+                android:layout_weight="1">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="2"
+                    android:id="@+id/textView3"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Tweede_uur"
+                    android:layout_weight="1"
+                    android:text="@string/twee"
+                    android:layout_column="1" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Tweedelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="3"
+                    android:id="@+id/textView4"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Derde_uur"
+                    android:layout_weight="1"
+                    android:text="@string/drie" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Derdelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="4"
+                    android:id="@+id/textView5"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Vierde_uur"
+                    android:layout_weight="1"
+                    android:text="@string/vier" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Vierdelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="5"
+                    android:id="@+id/textView6"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Vijfde_uur"
+                    android:layout_weight="1"
+                    android:text="@string/vijf" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Vijfdelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="6"
+                    android:id="@+id/textView7"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Zesde_uur"
+                    android:layout_weight="1"
+                    android:text="@string/zeven" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Zesdelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="7"
+                    android:id="@+id/textView8"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Zevende_uur"
+                    android:layout_weight="1"
+                    android:text="@string/zeve" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Zevendelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="8"
+                    android:id="@+id/textView9"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Achste_uur"
+                    android:layout_weight="1"
+                    android:text="@string/acht" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Achtsetlesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+            <TableRow
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@drawable/border">
+
+                <TextView
+                    android:layout_width="50dp"
+                    android:layout_height="match_parent"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="9"
+                    android:id="@+id/textView10"
+                    android:gravity="center_vertical|center_horizontal" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Negende_uur"
+                    android:layout_weight="1"
+                    android:text="@string/negen" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:id="@+id/Neegendelesuur"
+                    android:layout_weight="1" />
+            </TableRow>
+        </TableLayout>
+    </ScrollView>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Listadaptor/AbenceArrayAdaptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Listadaptor/AbenceArrayAdaptor.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Listadaptor/AbenceArrayAdaptor.java	(revision )
@@ -0,0 +1,64 @@
+package com.example.xavier.stageproject.Listadaptor;
+
+import android.content.Context;
+import android.text.Html;
+import android.text.Spanned;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.widget.ArrayAdapter;
+import android.widget.TextView;
+
+import com.example.xavier.stageproject.Classes.Absence;
+import com.example.xavier.stageproject.Classes.Message;
+import com.example.xavier.stageproject.R;
+
+import java.util.ArrayList;
+
+/**
+ * Created by xavier on 22/02/2016.
+ */
+public class AbenceArrayAdaptor extends ArrayAdapter<Absence> {
+    private final Context context;
+    private final ArrayList<Absence> values;
+
+    public AbenceArrayAdaptor(Context context, ArrayList<Absence> values) {
+        super(context, R.layout.list_item_ab, values);
+        this.context = context;
+        this.values = values;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        LayoutInflater inflater = (LayoutInflater) context
+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        View rowView = inflater.inflate(R.layout.list_item_ab, parent, false);
+        Absence summary;
+        if(values.get(position) != null) {
+            if(values.get(position).getName() != null) {
+                summary = values.get(position);
+                Log.e("Absence", summary.toString());
+                ((TextView) rowView.findViewById(R.id.textView)).setText(summary.toString());
+            }else{
+                ((TextView) rowView.findViewById(R.id.textView)).setText("No Absence");
+            }
+
+
+
+        }else{
+            ((TextView) rowView.findViewById(R.id.textView)).setText("No Absence");
+        }
+        //change the icon for Windows and iPhone
+        //String s = values[position];
+        /*if (s.startsWith("iPhone")) {
+            imageView.setImageResource(R.drawable.no);
+        } else {
+            imageView.setImageResource(R.drawable.ok);
+        }*/
+
+        return rowView;
+    }
+}
Index: app/src/androidTest/java/com/example/xavier/stageproject/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/xavier/stageproject/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/com/example/xavier/stageproject/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package com.example.xavier.stageproject;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision )
+++ .idea/vcs.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Roster/MyVolley.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/MyVolley.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/MyVolley.java	(revision )
@@ -0,0 +1,77 @@
+/**
+ * Copyright 2013 Ognyan Bankov
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ActivityManager;
+import android.content.Context;
+
+import com.android.volley.RequestQueue;
+import com.android.volley.toolbox.ImageLoader;
+import com.android.volley.toolbox.Volley;
+
+
+
+/**
+ * Helper class that is used to provide references to initialized RequestQueue(s) and ImageLoader(s)
+ * 
+ * @author Ognyan Bankov
+ * 
+ */
+public class MyVolley {
+    private static RequestQueue mRequestQueue;
+    private static ImageLoader mImageLoader;
+
+
+    private MyVolley() {
+        // no instances
+    }
+
+
+    static void init(Context context) {
+        mRequestQueue = Volley.newRequestQueue(context);
+
+        int memClass = ((ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE))
+                .getMemoryClass();
+        // Use 1/8th of the available memory for this memory cache.
+        int cacheSize = 1024 * 1024 * memClass / 8;
+        mImageLoader = new ImageLoader(mRequestQueue, new BitmapLruCache(cacheSize));
+    }
+
+
+    public static RequestQueue getRequestQueue(MaanDagFragment maanDagFragment) {
+        if (mRequestQueue != null) {
+            return mRequestQueue;
+        } else {
+            throw new IllegalStateException("RequestQueue not initialized");
+        }
+    }
+
+
+    /**
+     * Returns instance of ImageLoader initialized with {@see FakeImageCache} which effectively means
+     * that no memory caching is used. This is useful for images that you know that will be show
+     * only once.
+     * 
+     * @return
+     */
+    public static ImageLoader getImageLoader() {
+        if (mImageLoader != null) {
+            return mImageLoader;
+        } else {
+            throw new IllegalStateException("ImageLoader not initialized");
+        }
+    }
+}
Index: app/src/main/res/layout/content_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_tab.xml	(revision )
+++ app/src/main/res/layout/content_tab.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.myapplication.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay"
+        android:layout_weight="1">
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+        <android.support.design.widget.TabLayout
+            android:id="@+id/tab_layout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/toolbar"
+            android:background="?attr/colorPrimary"
+            android:elevation="6dp"
+            android:minHeight="?attr/actionBarSize"
+            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"/>
+    </android.support.design.widget.AppBarLayout>
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="460dp"
+        android:layout_gravity="bottom"
+        android:foregroundGravity="bottom">
+
+        <include layout="@layout/tab_main" />
+    </FrameLayout>
+
+</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/MainActivity.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/MainActivity.java	(revision )
@@ -0,0 +1,85 @@
+package com.example.xavier.stageproject;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.design.widget.TabLayout;
+import android.support.v4.view.ViewPager;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuItem;
+import com.example.xavier.stageproject.adapter.PagerAdapter;
+
+public class MainActivity extends AppCompatActivity {
+
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.content_tab);
+        Toolbar myToolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(myToolbar);
+        // Initilization
+
+        TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
+        tabLayout.addTab(tabLayout.newTab().setText("Messages"));
+        tabLayout.addTab(tabLayout.newTab().setText("Absences"));
+        tabLayout.addTab(tabLayout.newTab().setText("Roster"));
+        tabLayout.addTab(tabLayout.newTab().setText("Links"));
+
+        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
+
+        final ViewPager viewPager = (ViewPager) findViewById(R.id.pager);
+        final PagerAdapter adapter = new PagerAdapter
+                (getSupportFragmentManager(), tabLayout.getTabCount());
+        viewPager.setAdapter(adapter);
+        viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));
+        tabLayout.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
+            @Override
+            public void onTabSelected(TabLayout.Tab tab) {
+                Log.e("Tab1", String.valueOf(tab.getPosition()));
+                viewPager.setCurrentItem(tab.getPosition());
+            }
+
+            @Override
+            public void onTabUnselected(TabLayout.Tab tab) {
+
+            }
+
+            @Override
+            public void onTabReselected(TabLayout.Tab tab) {
+
+            }
+        });
+    }
+
+
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.menu_main, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+        if (id == R.id.action_settings) {
+           Intent intent = new Intent(getApplication(), MainActivity.class);
+            Bundle extra = getIntent().getExtras();
+            int test = extra.getInt("screen");
+            int student = extra.getInt("studentid");
+            intent.putExtra("studentid", student);
+            intent.putExtra("screen", test);
+            startActivity(intent);
+        }
+        if (id == R.id.LogOut) {
+            Intent intent = new Intent(getApplication(), LDAPActivety.class);
+            startActivity(intent);
+        }
+
+        return super.onOptionsItemSelected(item);
+    }
+}
Index: app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter1.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/adapter/PagerAdapter1.java	(revision )
@@ -0,0 +1,59 @@
+package com.example.xavier.stageproject.adapter;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+
+import com.example.xavier.stageproject.AbsenceActivity;
+import com.example.xavier.stageproject.Links;
+import com.example.xavier.stageproject.MessageActivity;
+import com.example.xavier.stageproject.Roster.DagFragment;
+import com.example.xavier.stageproject.Roster.DinsDagFragment;
+import com.example.xavier.stageproject.Roster.DondeDagFragment;
+import com.example.xavier.stageproject.Roster.MaanDagFragment;
+import com.example.xavier.stageproject.Roster.RosterFragment;
+import com.example.xavier.stageproject.Roster.VrijDagFragment;
+import com.example.xavier.stageproject.Roster.WoensDagFragment;
+
+
+import android.support.v4.app.FragmentStatePagerAdapter;
+
+public class PagerAdapter1 extends FragmentStatePagerAdapter {
+    int mNumOfTabs;
+
+    public PagerAdapter1(FragmentManager fm, int NumOfTabs) {
+        super(fm);
+        this.mNumOfTabs = NumOfTabs;
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+
+        switch (position) {
+            case 0:
+                //MaanDagFragment tab1 = new MaanDagFragment();
+                return new DagFragment(position);
+
+            case 1:
+               // DinsDagFragment  tab2 = new DinsDagFragment();
+                return new DagFragment(position);
+            case 2:
+                //WoensDagFragment  tab4 = new WoensDagFragment ();
+                return new DagFragment (position);
+            case 3:
+                //DondeDagFragment tab3 = new DondeDagFragment ();
+                return new DagFragment (position);
+            case 4:
+                //VrijDagFragment tab5 = new VrijDagFragment ();
+                return new DagFragment (position);
+
+
+            default:
+                return null;
+        }
+    }
+
+    @Override
+    public int getCount() {
+        return mNumOfTabs;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Classes/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Classes/Student.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Classes/Student.java	(revision )
@@ -0,0 +1,118 @@
+package com.example.xavier.stageproject.Classes;
+
+import java.util.Date;
+
+/**
+ * Created by xavier on 23/02/2016.
+ */
+public class Student {
+    int ID;
+    String lastname, firstname, klass, newe, repeating, swals, nationality, exitstudent, sex;
+    Date dateofbirth;
+
+
+    public Student() {
+    }
+
+    public Student(int ID, String lastname, String firstname, String klass, String newe, String repeating, String swals, String nationality, String exitstudent, String sex, Date dateofbirth) {
+        this.ID = ID;
+        this.lastname = lastname;
+        this.firstname = firstname;
+        this.klass = klass;
+        this.newe = newe;
+        this.repeating = repeating;
+        this.swals = swals;
+        this.nationality = nationality;
+        this.exitstudent = exitstudent;
+        this.sex = sex;
+        this.dateofbirth = dateofbirth;
+    }
+
+    public int getID() {
+        return ID;
+    }
+
+    public void setID(int ID) {
+        this.ID = ID;
+    }
+
+    public String getLastname() {
+        return lastname;
+    }
+
+    public void setLastname(String lastname) {
+        this.lastname = lastname;
+    }
+
+    public String getFirstname() {
+        return firstname;
+    }
+
+    public void setFirstname(String firstname) {
+        this.firstname = firstname;
+    }
+
+    public String getKlass() {
+        return klass;
+    }
+
+    public void setKlass(String klass) {
+        this.klass = klass;
+    }
+
+    public String getNewe() {
+        return newe;
+    }
+
+    public void setNewe(String newe) {
+        this.newe = newe;
+    }
+
+    public String getRepeating() {
+        return repeating;
+    }
+
+    public void setRepeating(String repeating) {
+        this.repeating = repeating;
+    }
+
+    public String getSwals() {
+        return swals;
+    }
+
+    public void setSwals(String swals) {
+        this.swals = swals;
+    }
+
+    public String getNationality() {
+        return nationality;
+    }
+
+    public void setNationality(String nationality) {
+        this.nationality = nationality;
+    }
+
+    public String getExitstudent() {
+        return exitstudent;
+    }
+
+    public void setExitstudent(String exitstudent) {
+        this.exitstudent = exitstudent;
+    }
+
+    public String getSex() {
+        return sex;
+    }
+
+    public void setSex(String sex) {
+        this.sex = sex;
+    }
+
+    public Date getDateofbirth() {
+        return dateofbirth;
+    }
+
+    public void setDateofbirth(Date dateofbirth) {
+        this.dateofbirth = dateofbirth;
+    }
+}
Index: app/src/main/java/com/example/xavier/stageproject/Roster/MaanDagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/MaanDagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/MaanDagFragment.java	(revision )
@@ -0,0 +1,206 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ProgressDialog;
+
+import android.os.Bundle;
+
+import android.support.v4.app.Fragment;
+
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import android.widget.TextView;
+
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+
+import com.example.xavier.stageproject.R;
+
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import java.util.ArrayList;
+
+
+public class MaanDagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+
+    // contacts JSONArray
+    JSONArray contacts = null;
+    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.roster, container, false);
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+
+
+                        try {
+
+                            contacts = response.getJSONArray("courses");
+
+
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+                            Bundle extra = getActivity().getIntent().getExtras();
+
+                            int test = extra.getInt("studentid");
+                            //Log.e("screen", String.valueOf(test));
+
+
+                            for (Courses ct : contactList) {
+                                if (ct.getStudent_id() == test) {
+                                    courses.add(ct);
+                                }
+                            }
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) getActivity().findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) getActivity().findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) getActivity().findViewById(R.id.Derdelesuur);
+                            vier = (TextView) getActivity().findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) getActivity().findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) getActivity().findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) getActivity().findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) getActivity().findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) getActivity().findViewById(R.id.Neegendelesuur);
+                            for (Courses cm : courses) {
+                                switch (cm.getDag()) {
+                                    case 1:
+                                        switch (cm.getPeriod()) {
+                                            case 1:
+
+                                                één.setText(cm.toString());
+                                                break;
+                                            case 2:
+                                                twee.setText(cm.toString());
+                                                break;
+                                            case 3:
+                                                drie.setText(cm.toString());
+                                                break;
+                                            case 4:
+                                                vier.setText(cm.toString());
+                                                break;
+                                            case 5:
+                                                vijf.setText(cm.toString());
+                                                break;
+                                            case 6:
+                                                zes.setText(cm.toString());
+                                                break;
+                                            case 7:
+                                                acht.setText(cm.toString());
+                                                break;
+                                            case 8:
+                                                acht.setText(cm.toString());
+                                                break;
+                                            case 9:
+                                                negen.setText(cm.toString());
+                                                break;
+                                        }
+                                        break;
+
+
+                                }
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        );
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(100000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        queue.add(getRequest);
+        Log.e("Maan", queue.toString());
+        return rootView;
+    }
+
+}
Index: app/src/main/res/layout/content_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_main.xml	(revision )
+++ app/src/main/res/layout/content_main.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.example.xavier.stageproject.MainActivity"
+    tools:showIn="@layout/activity_main"
+    >
+
+    <include layout="@layout/main"/>
+
+</RelativeLayout>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision )
+++ .idea/gradle.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="LOCAL" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleHome" value="C:\Program Files\Android\Android Studio\gradle\gradle-2.8" />
+        <option name="gradleJvm" value="1.8" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Roster/DinsDagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/DinsDagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/DinsDagFragment.java	(revision )
@@ -0,0 +1,197 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import java.util.ArrayList;
+
+public class DinsDagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+
+    // contacts JSONArray
+    JSONArray contacts = null;    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View rootView = inflater.inflate(R.layout.roster, container, false);
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        try {
+
+                            contacts = response.getJSONArray("courses");
+
+                            // looping through All Contacts
+
+
+
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+                            Bundle extra = getActivity().getIntent().getExtras();
+
+                            int test = extra.getInt("studentid");
+                            //Log.e("screen", String.valueOf(test));
+
+
+                            for (Courses ct : contactList) {
+                                if (ct.getStudent_id() == test) {
+                                    courses.add(ct);
+                                }
+                            }
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) getActivity().findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) getActivity().findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) getActivity().findViewById(R.id.Derdelesuur);
+                            vier = (TextView) getActivity().findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) getActivity().findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) getActivity().findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) getActivity().findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) getActivity().findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) getActivity().findViewById(R.id.Neegendelesuur);
+                            for (Courses c : courses) {
+                                switch (c.getDag()) {
+
+                                    case 2:
+                                        switch (c.getPeriod()) {
+                                            case 1:
+
+                                                één.setText(c.toString());
+                                                break;
+                                            case 2:
+                                                twee.setText(c.toString());
+                                                break;
+                                            case 3:
+                                                drie.setText(c.toString());
+                                                break;
+                                            case 4:
+                                                vier.setText(c.toString());
+                                                break;
+                                            case 5:
+                                                vijf.setText(c.toString());
+                                                break;
+                                            case 6:
+                                                zes.setText(c.toString());
+                                                break;
+                                            case 7:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 8:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 9:
+                                                negen.setText(c.toString());
+                                                break;
+                                        }
+                                        break;
+
+                                }
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        );
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(100000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        queue.add(getRequest);
+        return rootView;
+    }
+
+
+}
Index: bin/Debug/ConsoleApplication.vshost.exe.manifest
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bin/Debug/ConsoleApplication.vshost.exe.manifest	(revision )
+++ bin/Debug/ConsoleApplication.vshost.exe.manifest	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
+  <assemblyIdentity version="1.0.0.0" name="MyApplication.app"/>
+  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v2">
+    <security>
+      <requestedPrivileges xmlns="urn:schemas-microsoft-com:asm.v3">
+        <requestedExecutionLevel level="asInvoker" uiAccess="false"/>
+      </requestedPrivileges>
+    </security>
+  </trustInfo>
+</assembly>
Index: app/src/main/res/layout/tab_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/tab_main.xml	(revision )
+++ app/src/main/res/layout/tab_main.xml	(revision )
@@ -0,0 +1,15 @@
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.stageproject.MainActivity">
+    <android.support.v4.view.ViewPager
+        android:id="@+id/pager"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/tab_layout"/>
+
+    </RelativeLayout>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision )
+++ .idea/compiler.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <resourceExtensions />
+    <wildcardResourcePatterns>
+      <entry name="!?*.java" />
+      <entry name="!?*.form" />
+      <entry name="!?*.class" />
+      <entry name="!?*.groovy" />
+      <entry name="!?*.scala" />
+      <entry name="!?*.flex" />
+      <entry name="!?*.kt" />
+      <entry name="!?*.clj" />
+      <entry name="!?*.aj" />
+    </wildcardResourcePatterns>
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="false">
+        <processorPath useClasspath="true" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Classes/Global.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Classes/Global.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Classes/Global.java	(revision )
@@ -0,0 +1,22 @@
+package com.example.xavier.stageproject.Classes;
+
+/**
+ * Created by xavier on 22/02/2016.
+ */
+public class Global {
+    public static String URL = "http://extranet.eeb2.eu/app";
+    public static String Message="/App/app_messages.php";
+    public static String Absece="/App/app_absences.php";
+    public static final String Cources = "/App/app_cources.php";
+
+   // public static String Login ="student_Login.php";
+    public static String Student = "/App/app_student.php";
+    //public static String logs = "app_login.php";
+
+    public static String LDAPURLLocal = "10.1.0.43";
+    public static String LDAPURL = "62.72.116.92";
+    //public static String LDAPFullURL = "extranet.eeb2.eu";
+    public static int LDAPPOORT = 3268;
+    public static int LDAPLocalPoort = 389;
+
+}
Index: app/src/main/res/menu/menu_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_main.xml	(revision )
+++ app/src/main/res/menu/menu_main.xml	(revision )
@@ -0,0 +1,18 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.example.xavier.stageproject.MainActivity">
+    <item
+        android:id="@+id/LogOut"
+        android:orderInCategory="100"
+        android:title="LogOut"
+        android:icon="@drawable/ic_exit_to_app_white_24dp"
+        app:showAsAction="always"
+        />
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:title="Update"
+        android:icon="@drawable/ic_refresh_white_24dp"
+        app:showAsAction="always" />
+</menu>
Index: app/src/main/java/com/example/xavier/stageproject/Listadaptor/CourseArrayAdaptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Listadaptor/CourseArrayAdaptor.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Listadaptor/CourseArrayAdaptor.java	(revision )
@@ -0,0 +1,54 @@
+package com.example.xavier.stageproject.Listadaptor;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.TextView;
+
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.R;
+
+import java.util.ArrayList;
+
+/**
+ * Created by xavier on 26/02/2016.
+ */
+public class CourseArrayAdaptor extends ArrayAdapter<Courses> {
+    private final Context context;
+    private final ArrayList<Courses> values;
+
+    public CourseArrayAdaptor(Context context,ArrayList<Courses>values){
+            super(context, R.layout.list_item_ab,values);
+            this.context=context;
+            this.values=values;
+    }
+
+    @Override
+    public View getView(int position,View convertView,ViewGroup parent){
+            LayoutInflater inflater=(LayoutInflater)context
+            .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+            View rowView=inflater.inflate(R.layout.list_item_ab,parent,false);
+            Courses summary;
+            if(values.get(position)!=null){
+
+                summary=values.get(position);
+               //Log.e("Absence", summary.toString());
+                ((TextView)rowView.findViewById(R.id.textView)).setText(summary.toString());
+
+
+
+            }else{((TextView)rowView.findViewById(R.id.textView)).setText("No Absence");
+            }
+            //change the icon for Windows and iPhone
+            //String s = values[position];
+            /*if (s.startsWith("iPhone")) {
+                imageView.setImageResource(R.drawable.no);
+            } else {
+                imageView.setImageResource(R.drawable.ok);
+            }*/
+
+            return rowView;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Mysql/DBConector.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Mysql/DBConector.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Mysql/DBConector.java	(revision )
@@ -0,0 +1,18 @@
+package com.example.xavier.stageproject.Mysql;
+
+/**
+ * Created by xavier on 17/02/2016.
+ *
+ */
+import android.app.Activity;
+import android.os.Bundle;
+import android.widget.TextView;
+
+import com.example.xavier.stageproject.R;
+
+
+
+public class DBConector extends Activity {
+
+
+}
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.xavier.stageproject">
+
+    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/MyMaterialTheme"
+        android:largeHeap="true"
+
+        >
+        <activity
+            android:name=".LDAPActivety"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme.NoActionBar"
+            android:screenOrientation="portrait">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/AppTheme.NoActionBar"
+            android:screenOrientation="portrait"/>
+    </application>
+
+</manifest>
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision )
+++ .idea/encodings.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/copyright/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/copyright/profiles_settings.xml	(revision )
+++ .idea/copyright/profiles_settings.xml	(revision )
@@ -0,0 +1,3 @@
+<component name="CopyrightManager">
+  <settings default="" />
+</component>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Classes/Courses.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Classes/Courses.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Classes/Courses.java	(revision )
@@ -0,0 +1,78 @@
+package com.example.xavier.stageproject.Classes;
+
+import java.io.Serializable;
+
+/**
+ * Created by xavier on 26/02/2016.
+ */
+public class Courses implements Serializable {
+    int Student_id, dag, period;
+    String room, description, first_name, laste_name;
+
+    public Courses() {
+    }
+
+    public int getStudent_id() {
+        return Student_id;
+    }
+
+    public void setStudent_id(int student_id) {
+        Student_id = student_id;
+    }
+
+    public int getDag() {
+        return dag;
+    }
+
+    public void setDag(int dag) {
+        this.dag = dag;
+    }
+
+    public int getPeriod() {
+        return period;
+    }
+
+    public void setPeriod(int period) {
+        this.period = period;
+    }
+
+    public String getRoom() {
+        return room;
+    }
+
+    public void setRoom(String room) {
+        this.room = room;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public String getFirst_name() {
+        return first_name;
+    }
+
+    public void setFirst_name(String first_name) {
+        this.first_name = first_name;
+    }
+
+    public String getLaste_name() {
+        return laste_name;
+    }
+
+    public void setLaste_name(String laste_name) {
+        this.laste_name = laste_name;
+    }
+
+    @Override
+    public String toString() {
+        return
+                room + " - "+ description
+                         + "\n"
+                         + laste_name ;
+    }
+}
Index: app/src/main/java/com/example/xavier/stageproject/AbsenceActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/AbsenceActivity.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/AbsenceActivity.java	(revision )
@@ -0,0 +1,157 @@
+package com.example.xavier.stageproject;
+
+import android.app.ListActivity;
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.ListFragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ListAdapter;
+
+import com.example.xavier.stageproject.Classes.Absence;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Classes.Message;
+import com.example.xavier.stageproject.Listadaptor.AbenceArrayAdaptor;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+/**
+ * Created by xavier on 22/02/2016.
+ */
+public class AbsenceActivity extends ListFragment {
+
+    private ProgressDialog pDialog;
+    ArrayList<HashMap<String, String>> productsList;
+    // URL to get contacts JSON
+    private static String url = Global.URL + Global.Absece;
+
+    // JSON Node names
+    private static final String TAG_Table = "absence";
+    private static final String TAG_ID = "absence_ID";
+    private static final String TAG_NAME = "title";
+    private static final String TAG_Visible = "name";
+    private static final String TAG_houwers = "hours";
+    private static final String TAG_dag = "date";
+
+
+    // contacts JSONArray
+    JSONArray contacts = null;
+
+    // Hashmap for ListView
+    ArrayList<Absence> contactList;
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        View rootView = inflater.inflate(R.layout.absence, container, false);
+        contactList = new ArrayList<Absence>();
+        new GetAbsences().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
+        return rootView;
+    }
+
+
+    /**
+     * Async task class to get json by making HTTP call
+     * */
+    private class GetAbsences extends AsyncTask<Void, Void, Void> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            // Showing progress dialog
+            pDialog = new ProgressDialog(getActivity());
+            pDialog.setMessage("Please wait...");
+            pDialog.setCancelable(false);
+            pDialog.show();
+
+        }
+
+        @Override
+        protected Void doInBackground(Void... arg0) {
+            // Creating service handler class instance
+            ServiceHandler sh = new ServiceHandler();
+
+            // Making a request to url and getting response
+            String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);
+
+            //Log.d("Response: ", "> " + jsonStr);
+
+            if (jsonStr != null) {
+                try {
+                    JSONObject jsonObj = new JSONObject(jsonStr);
+
+                    // Getting JSON Array nod
+
+                        contacts = jsonObj.getJSONArray(TAG_Table);
+
+                        // looping through All Contacts
+                        for (int i = 0; i < contacts.length(); i++) {
+                            JSONObject c = contacts.getJSONObject(i);
+
+                            int id = c.getInt(TAG_ID);
+                            String name = c.getString(TAG_NAME);
+                            // Log.e("Boolean", c.getString(TAG_Visible));
+                            String vis = c.getString(TAG_Visible);
+                            String hour = c.getString(TAG_houwers);
+                            String dag = c.getString(TAG_dag);
+
+
+                            // tmp hashmap for single contact
+                            Absence contact = new Absence();
+
+                            // adding each child node to HashMap key => value
+                            contact.setID(id);
+                            contact.setTitle(name);
+                            contact.setName(vis);
+                            contact.setHours(hour);
+                            contact.setDate(dag);
+
+
+                            // adding contact to contact list
+                            contactList.add(contact);
+                        }
+
+                    }catch(JSONException e){
+                    Absence contact = new Absence();
+                    contactList.add(contact);
+                        //e.printStackTrace();
+                    }
+                }else{
+                    Log.e("ServiceHandler", "Couldn't get any data from the url");
+                }
+
+
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Void result) {
+            super.onPostExecute(result);
+            // Dismiss the progress dialog
+            if (pDialog.isShowing())
+                pDialog.dismiss();
+            /**
+             * Updating parsed JSON data into ListView
+             * */
+
+            ListAdapter adapter = new AbenceArrayAdaptor(getActivity(),contactList);
+            // updating listview
+           setListAdapter(adapter);
+
+           // Log.e("Size", String.valueOf(contact.length));
+
+        }
+
+    }
+}
Index: app/src/main/java/com/example/xavier/stageproject/Classes/Message.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Classes/Message.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Classes/Message.java	(revision )
@@ -0,0 +1,82 @@
+package com.example.xavier.stageproject.Classes;
+
+/**
+ * Created by xavier on 22/02/2016.
+ */
+public class Message {
+    int ID, screen;
+    boolean visible;
+    String title, message, expiredate;
+
+    public Message() {
+    }
+
+    public Message(int ID, int screen, boolean visible, String title, String message, String expiredate) {
+        this.ID = ID;
+        this.screen = screen;
+        this.visible = visible;
+        this.title = title;
+        this.message = message;
+        this.expiredate = expiredate;
+    }
+
+    public int getID() {
+        return ID;
+    }
+
+    public void setID(int ID) {
+        this.ID = ID;
+    }
+
+    public int getScreen() {
+        return screen;
+    }
+
+    public void setScreen(int screen) {
+        this.screen = screen;
+    }
+
+    public boolean getVisible() {
+        return visible;
+    }
+
+    public void setVisible(boolean visible) {
+        this.visible = visible;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public String getExpiredate() {
+        return expiredate;
+    }
+
+    public void setExpiredate(String expiredate) {
+        this.expiredate = expiredate;
+    }
+
+    @Override
+    public String toString() {
+        return "Message{" +
+                "ID=" + ID +
+                ", screen=" + screen +
+                ", visible=" + visible +
+                ", title='" + title + '\'' +
+                ", message='" + message + '\'' +
+                ", expiredate='" + expiredate + '\'' +
+                '}';
+    }
+}
Index: app/src/main/res/layout/list_item_ab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/list_item_ab.xml	(revision )
+++ app/src/main/res/layout/list_item_ab.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="10dp"
+    android:paddingLeft="10dp"
+    android:paddingRight="10dp" >
+
+    <!-- Name Label -->
+
+    <!-- Email label -->
+
+    <!-- Mobile number label -->
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="New Text"
+        android:id="@+id/textView"
+        android:visibility="visible"
+        android:textSize="20dp" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Roster/VrijDagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/VrijDagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/VrijDagFragment.java	(revision )
@@ -0,0 +1,213 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.concurrent.Executors;
+
+public class VrijDagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+
+    // contacts JSONArray
+    JSONArray contacts = null;    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.roster, container, false);
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        // display response
+                        //Log.d("Response", response.toString());
+                        /*pDialog = new ProgressDialog(getActivity());
+                        pDialog.setMessage("Please wait...");
+                        pDialog.setCancelable(false);
+                        pDialog.show();
+                        Courses c = new Courses();*/
+                        // JSONArray json = new JSONArray();
+
+
+
+                        try {
+                            //JSONObject jsonObj = new JSONObject(jsonStr);
+                            //json = response.getJSONArray("courses");
+                            //Log.e("JsonArray", json.toString());
+                            contacts = response.getJSONArray("courses");
+
+                            // looping through All Contacts
+
+
+
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+                            Bundle extra = getActivity().getIntent().getExtras();
+
+                            int test = extra.getInt("studentid");
+                            //Log.e("screen", String.valueOf(test));
+
+
+                            for (Courses ct : contactList) {
+                                if (ct.getStudent_id() == test) {
+                                    courses.add(ct);
+                                }
+                            }
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) getActivity().findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) getActivity().findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) getActivity().findViewById(R.id.Derdelesuur);
+                            vier = (TextView) getActivity().findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) getActivity().findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) getActivity().findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) getActivity().findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) getActivity().findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) getActivity().findViewById(R.id.Neegendelesuur);
+                            for (Courses c : courses) {
+                                switch (c.getDag()) {
+
+                                    case 2:
+                                        switch (c.getPeriod()) {
+                                            case 1:
+
+                                                één.setText(c.toString());
+                                                break;
+                                            case 2:
+                                                twee.setText(c.toString());
+                                                break;
+                                            case 3:
+                                                drie.setText(c.toString());
+                                                break;
+                                            case 4:
+                                                vier.setText(c.toString());
+                                                break;
+                                            case 5:
+                                                vijf.setText(c.toString());
+                                                break;
+                                            case 6:
+                                                zes.setText(c.toString());
+                                                break;
+                                            case 7:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 8:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 9:
+                                                negen.setText(c.toString());
+                                                break;
+                                        }
+                                        break;
+
+                                }
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        );
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(500000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        queue.add(getRequest);
+        return rootView;
+    }
+
+}
Index: app/src/main/res/layout/absence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/absence.xml	(revision )
+++ app/src/main/res/layout/absence.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.stageproject.MessageActivity">
+
+    <ListView
+        android:id="@android:id/list"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/xavier/stageproject/Roster/WoensDagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/WoensDagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/WoensDagFragment.java	(revision )
@@ -0,0 +1,214 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.concurrent.Executors;
+
+public class WoensDagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+
+    // contacts JSONArray
+    JSONArray contacts = null;    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View rootView = inflater.inflate(R.layout.roster, container, false);
+        //
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        // display response
+                        //Log.d("Response", response.toString());
+                        /*pDialog = new ProgressDialog(getActivity());
+                        pDialog.setMessage("Please wait...");
+                        pDialog.setCancelable(false);
+                        pDialog.show();
+                        Courses c = new Courses();*/
+                        // JSONArray json = new JSONArray();
+
+
+
+                        try {
+                            //JSONObject jsonObj = new JSONObject(jsonStr);
+                            //json = response.getJSONArray("courses");
+                            //Log.e("JsonArray", json.toString());
+                            contacts = response.getJSONArray("courses");
+
+                            // looping through All Contacts
+
+
+
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+                            Bundle extra = getActivity().getIntent().getExtras();
+
+                            int test = extra.getInt("studentid");
+                            //Log.e("screen", String.valueOf(test));
+
+
+                            for (Courses ct : contactList) {
+                                if (ct.getStudent_id() == test) {
+                                    courses.add(ct);
+                                }
+                            }
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) getActivity().findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) getActivity().findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) getActivity().findViewById(R.id.Derdelesuur);
+                            vier = (TextView) getActivity().findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) getActivity().findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) getActivity().findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) getActivity().findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) getActivity().findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) getActivity().findViewById(R.id.Neegendelesuur);
+                            for (Courses c : courses) {
+                                switch (c.getDag()) {
+
+                                    case 3:
+                                        switch (c.getPeriod()) {
+                                            case 1:
+
+                                                één.setText(c.toString());
+                                                break;
+                                            case 2:
+                                                twee.setText(c.toString());
+                                                break;
+                                            case 3:
+                                                drie.setText(c.toString());
+                                                break;
+                                            case 4:
+                                                vier.setText(c.toString());
+                                                break;
+                                            case 5:
+                                                vijf.setText(c.toString());
+                                                break;
+                                            case 6:
+                                                zes.setText(c.toString());
+                                                break;
+                                            case 7:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 8:
+                                                acht.setText(c.toString());
+                                                break;
+                                            case 9:
+                                                negen.setText(c.toString());
+                                                break;
+                                        }
+                                        break;
+
+                                }
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        );
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(100000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        queue.add(getRequest);
+        return rootView;
+    }
+
+}
Index: app/src/main/res/drawable/roudedbutton.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/roudedbutton.xml	(revision )
+++ app/src/main/res/drawable/roudedbutton.xml	(revision )
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <stroke android:width="1dp" android:color="#FF404040" />
+    <solid android:color="#378de5" />
+    <corners android:radius="6dp" />
+</shape>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,34 @@
+<resources>
+    <string name="app_name">StageProject</string>
+    <string name="action_settings">Settings</string>
+    <string name="title_activity_message">MessageActivity</string>
+    <string name="URL_Zimbra">Zimbra (school email)</string>
+    <string name="URL_SMS">SMS (MySchool)</string>
+    <string name="URL_ExtranetSEc">http://extranet.eeb2.eu/Secondary/login.php</string>
+    <string name="URL_ExtranetPri">http://extranet.eeb2.eu/Primary/login.php</string>
+    <string name="URL_ChangePass">http://www.eeb2.be/ChangePassword/login.php</string>
+    <string name="URL_Portal">https://portal.eursc.org/</string>
+    <string name="URL_Learning">Its Learning</string>
+    <string name="URL_Tutorials_ICT">http://www.eeb2.be/ICT/</string>
+    <string name="URL_Alumni">Alumni Europae: ES Students Association</string>
+    <string name="URL_Pupils_Facebook">Pupils\' Committee\'s Facebook page</string>
+    <string name="URL_Blog">Pupils\' newspaper : The Woluwe Independent</string>
+    <string name="user_pass">Username and password required</string>
+
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+    <string name="één">08.30\n09.15</string>
+    <string name="twee">09.20\n10.05</string>
+    <string name="drie">10.10\n10.55</string>
+    <string name="vier">11.15\n12.00</string>
+    <string name="vijf">12.05\n12.50</string>
+    <string name="zes">12.55\n13.40</string>
+    <string name="zeven">12.55\n13.40</string>
+    <string name="zeve">13.45\n14.30</string>
+    <string name="acht">14.35\n15.20</string>
+    <string name="negen" >15.25\n16.10</string>
+    <string name="EEB2_APP">
+        <big>EEB2 APP</big>
+    </string>
+
+</resources>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision )
+++ .idea/misc.xml	(revision )
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="EntryPointsManager">
+    <entry_points version="2.0" />
+  </component>
+  <component name="NullableNotNullManager">
+    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />
+    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
+    <option name="myNullables">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+        </list>
+      </value>
+    </option>
+    <option name="myNotNulls">
+      <value>
+        <list size="4">
+          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
+          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
+          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
+          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+        </list>
+      </value>
+    </option>
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
+    <OptionsSetting value="true" id="Add" />
+    <OptionsSetting value="true" id="Remove" />
+    <OptionsSetting value="true" id="Checkout" />
+    <OptionsSetting value="true" id="Update" />
+    <OptionsSetting value="true" id="Status" />
+    <OptionsSetting value="true" id="Edit" />
+    <ConfirmationsSetting value="0" id="Add" />
+    <ConfirmationsSetting value="0" id="Remove" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: app/libs/LICENSE-UnboundID-LDAPSDK.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/libs/LICENSE-UnboundID-LDAPSDK.txt	(revision )
+++ app/libs/LICENSE-UnboundID-LDAPSDK.txt	(revision )
@@ -0,0 +1,91 @@
+                     UnboundID LDAP SDK Free Use License
+
+THIS IS AN AGREEMENT BETWEEN YOU ("YOU") AND UNBOUNDID CORP. ("UNBOUNDID")
+REGARDING YOUR USE OF UNBOUNDID LDAP SDK FOR JAVA AND ANY ASSOCIATED
+DOCUMENTATION, OBJECT CODE, COMPILED LIBRARIES, SOURCE CODE AND SOURCE FILES OR
+OTHER MATERIALS MADE AVAILABLE BY UNBOUNDID (COLLECTIVELY REFERRED TO IN THIS
+AGREEMENT AS THE ("SDK").
+
+BY INSTALLING, ACCESSING OR OTHERWISE USING THE SDK, YOU ACCEPT THE TERMS OF
+THIS AGREEMENT.  IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, DO NOT
+INSTALL, ACCESS OR USE THE SDK.
+
+USE OF THE SDK.  Subject to your compliance with this Agreement, UnboundID
+grants to You a non-exclusive, royalty-free license, under UnboundID's
+intellectual property rights in the SDK, to use, reproduce, modify and
+distribute this release of the SDK; provided that no license is granted herein
+under any patents that may be infringed by your modifications, derivative works
+or by other works in which the SDK may be incorporated (collectively, your
+"Applications").  You may reproduce and redistribute the SDK with your
+Applications provided that you (i) include this license file and an
+unmodified copy of the unboundid-ldapsdk-se.jar file; and (ii) such
+redistribution is subject to a license whose terms do not conflict with or
+contradict the terms of this Agreement. You may also reproduce and redistribute
+the SDK without your Applications provided that you redistribute the SDK
+complete and unmodified (i.e., with all "read me" files, copyright notices, and
+other legal notices and terms that UnboundID has included in the SDK).
+
+SCOPE OF LICENSES.  This Agreement does not grant You the right to use any
+UnboundID intellectual property which is not included as part of the SDK.  The
+SDK is licensed, not sold.  This Agreement only gives You some rights to use
+the SDK.  UnboundID reserves all other rights. Unless applicable law gives You
+more rights despite this limitation, You may use the SDK only as expressly
+permitted in this Agreement.
+
+SUPPORT.  UnboundID is not obligated to provide any technical or other support
+("Support Services") for the SDK to You under this Agreement. However, if
+UnboundID chooses to provide any Support Services to You, Your use of such
+Support Services will be governed by then-current UnboundID support policies.
+
+TERMINATION.  UnboundID reserves the right to discontinue offering the SDK and
+to modify the SDK at any time in its sole discretion.  Notwithstanding anything
+contained in this Agreement to the contrary, UnboundID may also, in its sole
+discretion, terminate or suspend access to the SDK to You or any end user at
+any time.  In addition, if you fail to comply with the terms of this Agreement,
+then any rights granted herein will be automatically terminated if such failure
+is not corrected within 30 days of the initial notification of such failure.
+You acknowledge that termination and/or monetary damages may not be a
+sufficient remedy if You breach this Agreement and that UnboundID will be
+entitled, without waiving any other rights or remedies, to injunctive or
+equitable relief as may be deemed proper by a court of competent jurisdiction
+in the event of a breach.  UnboundID may also terminate this Agreement if the
+SDK becomes, or in UnboundID?s reasonable opinion is likely to become, the
+subject of a claim of intellectual property infringement or trade secret
+misappropriation.  All rights and licenses granted herein will simultaneously
+and automatically terminate upon termination of this Agreement for any reason.
+
+DISCLAIMER OF WARRANTY. THE SDK IS PROVIDED "AS IS" AND UNBOUNDID DOES NOT
+WARRANT THAT THE SDK WILL BE ERROR-FREE, VIRUS-FREE, WILL PERFORM IN AN
+UNINTERRUPTED, SECURE OR TIMELY MANNER, OR WILL INTEROPERATE WITH OTHER
+HARDWARE, SOFTWARE, SYSTEMS OR DATA.  TO THE MAXIMUM EXTENT ALLOWED BY LAW, ALL
+CONDITIONS, REPRESENTATIONS AND WARRANTIES, WHETHER EXPRESS, IMPLIED, STATUTORY
+OR OTHERWISE INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE (EVEN IF UNBOUNDID HAD BEEN
+INFORMED OF SUCH PURPOSE), OR NON-INFRINGEMENT OF THIRD PARTY RIGHTS ARE HEREBY
+DISCLAIMED.
+
+LIMITATION OF LIABILITY.  IN NO EVENT WILL UNBOUNDID OR ITS SUPPLIERS BE LIABLE
+FOR ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, LOST PROFITS,
+REVENUE, DATA OR DATA USE, BUSINESS INTERRUPTION, COST OF COVER, DIRECT,
+INDIRECT, SPECIAL, PUNITIVE, INCIDENTAL OR CONSEQUENTIAL DAMAGES OF ANY KIND)
+ARISING OUT OF THE USE OF OR INABILITY TO USE THE SDK OR IN ANY WAY RELATED TO
+THIS AGREEMENT, EVEN IF UNBOUNDID HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+ADDITIONAL RIGHTS.  Certain states do not allow the exclusion of implied
+warranties or limitation of liability for certain kinds of damages, so the
+exclusion of limited warranties and limitation of liability set forth above may
+not apply to You.
+
+EXPORT RESTRICTIONS.  The SDK is subject to United States export control laws.
+You acknowledge and agree that You are responsible for compliance with all
+domestic and international export laws and regulations that apply to the SDK.
+
+MISCELLANEOUS.  This Agreement constitutes the entire agreement with respect to
+the SDK.  If any provision of this Agreement shall be held to be invalid,
+illegal or unenforceable, the validity, legality and enforceability of the
+remaining provisions shall in no way be affected or impaired thereby. This
+Agreement and performance hereunder shall be governed by and construed in
+accordance with the laws of the State of Texas without regard to its conflict
+of laws rules.  Any disputes related to this Agreement shall be exclusively
+litigated in the state or federal courts located in Travis County, Texas.
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,8 @@
+*.iml
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
+/captures
Index: app/src/main/java/com/example/xavier/stageproject/LDAPActivety.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/LDAPActivety.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/LDAPActivety.java	(revision )
@@ -0,0 +1,359 @@
+package com.example.xavier.stageproject;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.TextView;
+
+
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Classes.Message;
+import com.example.xavier.stageproject.Classes.Student;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.unboundid.ldap.sdk.LDAPConnection;
+import com.unboundid.ldap.sdk.LDAPException;
+import com.unboundid.ldap.sdk.LDAPSearchException;
+import com.unboundid.ldap.sdk.SearchResult;
+import com.unboundid.ldap.sdk.SearchResultEntry;
+import com.unboundid.ldap.sdk.SearchScope;
+import com.unboundid.ldap.sdk.examples.LDAPSearch;
+import com.unboundid.ldap.sdk.migrate.ldapjdk.LDAPAttribute;
+import com.unboundid.ldap.sdk.migrate.ldapjdk.LDAPAttributeSet;
+import com.unboundid.ldap.sdk.migrate.ldapjdk.LDAPEntry;
+import com.unboundid.ldap.sdk.migrate.ldapjdk.LDAPSearchResults;
+import com.unboundid.ldap.sdk.persist.LDAPField;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.List;
+import java.util.jar.Attributes;
+
+
+public class LDAPActivety extends AppCompatActivity implements View.OnClickListener{
+
+    EditText user, pass;
+    TextView err;
+    ArrayList<String> userinfo= new ArrayList<String>();
+
+    private ProgressDialog pDialog;
+    ArrayList<Student> productsList;
+    // URL to get contacts JSON
+    private static String url = Global.URL + Global.Student;
+
+    // JSON Node names
+    private static final String TAG_Table = "student";
+    private static final String TAG_ID = "ID";
+    private static final String TAG_NAME = "Class";
+    //private static final String TAG_Visible = "visibility";
+
+
+    // contacts JSONArray
+    JSONArray contacts = null;
+
+    // Hashmap for ListView
+    ArrayList<Student> contactList;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        // TODO Auto-generated method stub
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        Toolbar myToolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(myToolbar);
+        //LDAPConnection con = new LDAPConnection();
+        //LDAPConnection con1 = new LDAPConnection();
+        user = (EditText) findViewById(R.id.Username);
+        pass = (EditText) findViewById(R.id.Password);
+        err = (TextView) findViewById(R.id.Error);
+        Button login = (Button) findViewById(R.id.Login);
+        login.setOnClickListener(this);
+
+        /*Button message = (Button) findViewById(R.id.Message);
+        message.setOnClickListener(this);
+        Button afwezig = (Button) findViewById(R.id.Afwezigen);
+        afwezig.setOnClickListener(this);*/
+
+       /* try {
+            con1.connect(Global.LDAPURL, Global.LDAPPOORT);
+
+        } catch (LDAPException e) {
+            e.printStackTrace();
+        }*/
+        //Log.e("Bind", );
+
+        //setup input fields
+
+    }
+
+
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        MenuInflater inflater = getMenuInflater();
+        inflater.inflate(R.menu.menu_main, menu);
+        return true;
+    }
+
+    @Override
+    public void onClick(View v) {
+        Intent intent;
+        switch(v.getId()){
+            case R.id.Login:
+                err.setText("");
+                //Play voicefile
+                //MediaPlayer.create(getBaseContext(), R.raw.voicefile).start();
+                //Log.e("Login", "Login");
+                final String[] error = new String[1];
+
+                if(!user.getText().toString().isEmpty() && !pass.getText().toString().isEmpty()) {
+                    final LDAPConnection con = new LDAPConnection();
+                    this.runOnUiThread(new Runnable() {
+                        public void run() {
+
+
+                    try {
+
+                        con.connect(Global.LDAPURL, Global.LDAPPOORT);
+                        Log.e("Connected", String.valueOf(con.isConnected()));
+
+                    } catch (LDAPException e) {
+
+                        try {
+                            con.connect(Global.LDAPURLLocal, Global.LDAPLocalPoort);
+                            Log.e("Connected", String.valueOf(con.isConnected()));
+                        } catch (LDAPException e1) {
+                            e1.printStackTrace();
+                        }
+
+                    }
+
+                    Log.e("Connected", String.valueOf(con.isConnected()));
+
+                    try {
+
+                        String format = "uid=%s,ou=Users,dc=eeb2,dc=be";
+                        String ldapuser = String.format(format, user.getText().toString());
+                        String searchDn = "(objectclass=*)";
+                        String[] myAttrs = {"cn", "employeenumber", "gidnumber", "postalcode"};
+
+                        con.bind(ldapuser, pass.getText().toString());
+
+                        SearchResultEntry st = con.getEntry(ldapuser);
+                       // Log.e("Entry", st.toString());
+                        SearchResult myResults = null;
+
+
+                        SearchResult searchResults;
+                        searchResults = con.search(ldapuser, SearchScope.SUB,
+                                searchDn, myAttrs);
+
+                        //Log.e("Search", searchResults.toString());
+                        List<SearchResultEntry> sre = searchResults.getSearchEntries();
+                        //Log.e("Search lengt", String.valueOf(sre.size()));
+                        for (SearchResultEntry s : sre) {
+                           // Log.e("Search", s.toString());
+                           // Log.e("Search", String.valueOf(myAttrs.length));
+                            for (int i = 0; i < myAttrs.length; i++) {
+                                String sts = s.getAttributeValue(myAttrs[i]);
+                                userinfo.add(sts);
+                               // Log.e("Search", sts);
+                            }
+                        }
+                        contactList = new ArrayList<Student>();
+
+                        new GetContacts().execute();
+
+
+                    } catch (LDAPException e) {
+                        //err.setVisibility(View.VISIBLE);
+
+                        err.setVisibility(View.VISIBLE);
+                        err.setText(e.getMessage());
+                        Log.e("Error", e.getMessage());
+
+                    }
+                        }
+                    });
+
+                }else{
+                    err.setVisibility(View.VISIBLE);
+                   err.setText(R.string.user_pass);
+                }
+
+                break;
+
+           /* case R.id.Message:
+                //Stop MediaPlayer
+                ///MediaPlayer.create(getBaseContext(), R.raw.voicefile).stop();
+                intent = new Intent(this, MessageActivity.class);
+                this.startActivity(intent);
+                break;
+            case R.id.Afwezigen:
+                //Stop MediaPlayer
+                ///MediaPlayer.create(getBaseContext(), R.raw.voicefile).stop();
+                intent = new Intent(this, AbsenceActivity.class);
+                this.startActivity(intent);
+                break;*/
+        }
+    }
+    /**
+     * Async task class to get json by making HTTP call
+     * */
+    private class GetContacts extends AsyncTask<Void, Void, Void> {
+
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            // Showing progress dialog
+           pDialog = new ProgressDialog(LDAPActivety.this);
+            pDialog.setMessage("Please wait...");
+            pDialog.setCancelable(false);
+            pDialog.show();
+
+        }
+
+        @Override
+        protected Void doInBackground(Void... arg0) {
+            // Creating service handler class instance
+            ServiceHandler sh = new ServiceHandler();
+
+            // Making a request to url and getting response
+            String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);
+
+            //Log.d("Response: ", "> " + jsonStr);
+
+            if (jsonStr != null) {
+                try {
+                    JSONObject jsonObj = new JSONObject(jsonStr);
+
+                    // Getting JSON Array node
+                    contacts = jsonObj.getJSONArray(TAG_Table);
+
+                    // looping through All Contacts
+                    for (int i = 0; i < contacts.length(); i++) {
+                        JSONObject c = contacts.getJSONObject(i);
+
+                        int id = c.getInt(TAG_ID);
+                        //Log.e("ID", String.valueOf(id));
+                        String name = c.getString(TAG_NAME);
+                        // Log.e("Boolean", c.getString(TAG_Visible));
+                        boolean vis = false;
+
+
+
+
+                        // tmp hashmap for single contact
+                        Student contact = new Student();
+
+                        // adding each child node to HashMap key => value
+                        contact.setID(id);
+                        contact.setKlass(name);
+
+
+
+                        // adding contact to contact list
+                        contactList.add(contact);
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            } else {
+                //Log.e("ServiceHandler", "Couldn't get any data from the url");
+            }
+
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Void result) {
+            super.onPostExecute(result);
+            // Dismiss the progress dialog
+            if (pDialog.isShowing())
+                pDialog.dismiss();
+            /**
+             * Updating parsed JSON data into ListView
+             * */
+            Student stud = new Student();
+            //Log.e("Student", userinfo.get(1));
+            stud.setID(Integer.parseInt(userinfo.get(1)));
+            for(Student student : contactList){
+                if(student.getID() == stud.getID()) {
+                    char[] ch = student.getKlass().toCharArray();
+                    //Log.e("Char:", ch[0]+"/n"+ch[1]);
+                    switch (String.valueOf(ch[1])) {
+                        case "1":
+                            Intent intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("screen", 1);
+                            intent.putExtra("studentid", student.getID());
+                            startActivity(intent);
+                            break;
+                        case "2":
+                            intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+                            intent.putExtra("screen", 1);
+                            startActivity(intent);
+                            break;
+                        case "3":
+                            intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+
+                            intent.putExtra("screen", 2);
+                            startActivity(intent);
+                            break;
+                        case "4":
+                            intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+                            intent.putExtra("screen", 2);
+                            startActivity(intent);
+                            break;
+                        case "5":
+                            intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+                            intent.putExtra("screen", 3);
+                            startActivity(intent);
+                            break;
+                        case "6":
+                            intent = new Intent(getApplication(),MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+                            intent.putExtra("screen", 3);
+                            startActivity(intent);
+
+                        case "7":
+                            intent = new Intent(getApplication(), MainActivity.class);
+                            intent.putExtra("studentid", student.getID());
+                            intent.putExtra("screen",3);
+                            startActivity(intent);
+                            break;
+                        default:
+                            /*intent = new Intent(getApplication(), MessageActivity.class);
+                            intent.putExtra("screen", 0);
+                            startActivity(intent);*/
+
+                    }
+                }
+            }
+
+
+            //Log.e("Size", String.valueOf(contact.length));
+
+        }
+
+    }
+}
+
+
Index: app/src/main/res/layout/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/main.xml	(revision )
+++ app/src/main/res/layout/main.xml	(revision )
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical"
+    android:layout_weight="1"
+    android:gravity="center_horizontal"
+    android:weightSum="1">
+    <!-- Main ListView
+         Always give id value as list(@android:id/list)
+    -->
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/scrollView"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textAppearance="?android:attr/textAppearanceLarge"
+                android:text="@string/EEB2_APP"
+                android:id="@+id/textView11"
+                android:layout_gravity="center"
+                android:textSize="40dp"
+                android:textColor="#0003d6" />
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:textAppearance="?android:attr/textAppearanceLarge"
+                android:id="@+id/Error"
+                android:textColor="#fe0303"
+                android:visibility="gone"
+                />
+
+            <EditText
+                    android:layout_width="392dp"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/Username"
+                    android:hint="Enter Name"
+                    android:focusable="true"
+                android:layout_below="@+id/imageView"
+                    android:layout_alignParentLeft="true"
+                    android:layout_alignParentStart="true"
+                    android:layout_alignParentRight="true"
+                    android:layout_alignParentEnd="true"
+                android:maxLines="1" android:singleLine="true"
+                android:layout_marginBottom="5dp"
+                android:inputType="number"
+                android:textSize="25dp"
+                android:background="#FAFFBD" />
+
+            <EditText
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:ems="10"
+                    android:id="@+id/Password"
+                    android:layout_below="@+id/Username"
+                    android:layout_alignParentLeft="true"
+                    android:layout_alignParentStart="true"
+                    android:layout_alignRight="@+id/Username"
+                    android:layout_alignEnd="@+id/Username"
+                    android:hint="Password"
+                    android:textSize="25dp"
+                    android:layout_marginBottom="5dp"
+                    android:maxLines="1" android:singleLine="true"
+                    android:inputType="textPassword"
+                    android:background="#FAFFBD" />
+
+            <Button
+                    android:layout_width="120dp"
+                    android:layout_height="wrap_content"
+                    android:text="login"
+                    android:id="@+id/Login"
+                    android:layout_alignParentBottom="true"
+                    android:layout_toLeftOf="@+id/textview"
+                    android:layout_toStartOf="@+id/textview"
+                android:textSize="20dp"
+                android:background="@drawable/roudedbutton"
+                android:textColor="#fdfdfe"
+                android:layout_alignParentLeft="true"
+                android:layout_alignParentTop="true"
+                android:layout_marginTop="5dp"
+                android:layout_gravity="center" />
+
+        </LinearLayout>
+    </ScrollView>
+
+
+</RelativeLayout>
Index: app/src/main/res/drawable/border.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/border.xml	(revision )
+++ app/src/main/res/drawable/border.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape= "rectangle"  >
+    <stroke android:width="1dp"  android:color="#000000"/>
+</shape>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,23 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: app/src/main/java/com/example/xavier/stageproject/Roster/DagFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/xavier/stageproject/Roster/DagFragment.java	(revision )
+++ app/src/main/java/com/example/xavier/stageproject/Roster/DagFragment.java	(revision )
@@ -0,0 +1,387 @@
+package com.example.xavier.stageproject.Roster;
+
+import android.annotation.SuppressLint;
+import android.app.ProgressDialog;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.os.StrictMode;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.VolleyLog;
+import com.android.volley.toolbox.JsonArrayRequest;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.StringRequest;
+import com.android.volley.toolbox.Volley;
+import com.example.xavier.stageproject.Classes.Courses;
+import com.example.xavier.stageproject.Classes.Global;
+import com.example.xavier.stageproject.Mysql.ServiceHandler;
+import com.example.xavier.stageproject.R;
+import com.google.gson.JsonArray;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.CopyOnWriteArrayList;
+
+@SuppressLint("ValidFragment")
+public class DagFragment extends Fragment {
+
+    private ProgressDialog pDialog;
+    private static String url = Global.URL + Global.Cources;
+    private static final String TAG_Table = "courses";
+    private static final String TAG_ID = "Student_id";
+    private static final String TAG_Day = "Day";
+    private static final String TAG_Description = "Code";
+    private static final String TAG_First_Name = "First_name";
+    private static final String TAG_Last_Name = "Last_name";
+    private static final String TAG_Period = "Period";
+    private static final String TAG_Room = "Room";
+    int load = 0;
+
+    // contacts JSONArray
+    JSONArray contacts = null;
+    TextView één, twee, drie, vier, vijf, zes, zeven, acht, negen;
+    // JSON Node names
+
+    ArrayList<Courses> contactList;
+    ArrayList<Courses> courses = new ArrayList<Courses>();
+    int tabs;
+
+    @SuppressLint("ValidFragment")
+    public DagFragment(int tab){
+        tabs = tab;
+    }
+    @Override
+    public View onCreateView(final LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        final View rootView = inflater.inflate(R.layout.roster, container, false);
+        pDialog = new ProgressDialog(getActivity());
+        pDialog.setMessage("Please wait...");
+        pDialog.setCancelable(false);
+        pDialog.show();
+        contactList = new ArrayList<Courses>();
+
+        Bundle extra = getActivity().getIntent().getExtras();
+        if(load == 0) {
+            int test = extra.getInt("studentid");
+            url = url + "?Student_id=" + test + "";
+            Log.e("URL", url);
+            load = 1;
+        }
+        RequestQueue queue = Volley.newRequestQueue(getActivity().getApplicationContext());
+        final JsonObjectRequest getRequest = new JsonObjectRequest(Request.Method.GET, url,
+                new Response.Listener<JSONObject>()
+                {
+                    @Override
+                    public void onResponse(JSONObject response) {
+                        //Bundle extra = getActivity().getIntent().getExtras();
+
+                        /*int test = extra.getInt("studentid");
+                        url = url +"?Student_id="+test+"";
+                        Log.e("URL", url);*/
+                        try {
+                            contacts = response.getJSONArray("courses");
+                            for (int i = 0; i < contacts.length(); i++) {
+                                JSONObject cs = contacts.getJSONObject(i);
+                                int id = cs.getInt(TAG_ID);
+                                //Log.e("ID", String.valueOf(id));
+                                int name = cs.getInt(TAG_Day);
+                                // Log.e("Boolean", c.getString(TAG_Visible));
+                                String vis = cs.getString(TAG_Description);
+                                int screen = cs.getInt(TAG_Period);
+                                String screen1 = cs.getString(TAG_Room);
+                                String f = cs.getString(TAG_First_Name);
+                                String l = cs.getString(TAG_Last_Name);
+
+
+                                // tmp hashmap for single contact
+
+
+                                Courses contact = new Courses();
+
+                                // adding each child node to HashMap key => value
+                                contact.setStudent_id(id);
+                                contact.setDag(name);
+                                contact.setDescription(vis);
+                                contact.setPeriod(screen);
+                                contact.setRoom(screen1);
+                                contact.setFirst_name(f);
+                                contact.setLaste_name(l);
+
+
+                                // adding contact to contact list
+                                contactList.add(contact);
+
+
+                            }
+
+
+                            /*for(Courses cr : courses){
+                                Log.e("Cources:", cr.toString());
+                            }*/
+                            if (pDialog.isShowing())
+                                pDialog.dismiss();
+                            //new GetCourses().executeOnExecutor(Executors.newSingleThreadExecutor());
+                            één = (TextView) rootView.findViewById(R.id.Eerstelesuur);
+                            twee = (TextView) rootView.findViewById(R.id.Tweedelesuur);
+                            drie = (TextView) rootView.findViewById(R.id.Derdelesuur);
+                            vier = (TextView) rootView.findViewById(R.id.Vierdelesuur);
+                            vijf = (TextView) rootView.findViewById(R.id.Vijfdelesuur);
+                            zes = (TextView) rootView.findViewById(R.id.Zesdelesuur);
+                            zeven = (TextView) rootView.findViewById(R.id.Zevendelesuur);
+                            acht = (TextView) rootView.findViewById(R.id.Achtsetlesuur);
+                            negen = (TextView) rootView.findViewById(R.id.Neegendelesuur);
+                            //Log.e("Tab3", tabs + "");
+
+
+
+                            switch(tabs) {
+                                case 0:
+                                    for (Courses cm : contactList) {
+                                        switch (cm.getDag()) {
+                                            case 1:
+
+                                                switch (cm.getPeriod()) {
+                                                    case 1:
+                                                        //Log.e("Dag", "uur1");
+                                                        één.setText(cm.toString());
+                                                        break;
+                                                    case 2:
+                                                        //Log.e("Dag", "uur2");
+                                                        twee.setText(cm.toString());
+                                                        break;
+                                                    case 3:
+                                                        //Log.e("Dag", "uur3");
+                                                        drie.setText(cm.toString());
+                                                        break;
+                                                    case 4:
+                                                       // Log.e("Dag", "uur4");
+                                                        vier.setText(cm.toString());
+                                                        break;
+                                                    case 5:
+                                                        vijf.setText(cm.toString());
+                                                        break;
+                                                    case 6:
+                                                        zes.setText(cm.toString());
+                                                        break;
+                                                    case 7:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 8:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 9:
+                                                        negen.setText(cm.toString());
+                                                        break;
+                                                }
+                                                break;
+
+
+                                        }
+                                    }
+                                    break;
+                                case 1:
+                                    for (Courses cm : contactList) {
+                                        switch (cm.getDag()) {
+                                            case 2:
+                                                switch (cm.getPeriod()) {
+                                                    case 1:
+                                                       // Log.e("Dag", "uur1");
+                                                        één.setText(cm.toString());
+                                                        break;
+                                                    case 2:
+                                                        twee.setText(cm.toString());
+                                                        break;
+                                                    case 3:
+                                                        drie.setText(cm.toString());
+                                                        break;
+                                                    case 4:
+                                                        vier.setText(cm.toString());
+                                                        break;
+                                                    case 5:
+                                                        vijf.setText(cm.toString());
+                                                        break;
+                                                    case 6:
+                                                        zes.setText(cm.toString());
+                                                        break;
+                                                    case 7:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 8:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 9:
+                                                        negen.setText(cm.toString());
+                                                        break;
+                                                }
+                                                break;
+
+
+                                        }
+                                    }
+                                    break;
+                                case 2:
+                                    for (Courses cm : contactList) {
+                                        switch (cm.getDag()) {
+                                            case 3:
+                                                switch (cm.getPeriod()) {
+                                                    case 1:
+                                                        //Log.e("Dag", "uur1");
+                                                        één.setText(cm.toString());
+                                                        break;
+                                                    case 2:
+                                                        twee.setText(cm.toString());
+                                                        break;
+                                                    case 3:
+                                                        drie.setText(cm.toString());
+                                                        break;
+                                                    case 4:
+                                                        vier.setText(cm.toString());
+                                                        break;
+                                                    case 5:
+                                                        vijf.setText(cm.toString());
+                                                        break;
+                                                    case 6:
+                                                        zes.setText(cm.toString());
+                                                        break;
+                                                    case 7:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 8:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 9:
+                                                        negen.setText(cm.toString());
+                                                        break;
+                                                }
+                                                break;
+
+
+                                        }
+                                    }
+                                    break;
+                                case 3:
+                                    for (Courses cm : contactList) {
+                                        switch (cm.getDag()) {
+                                            case 4:
+                                                switch (cm.getPeriod()) {
+                                                    case 1:
+                                                        //Log.e("Dag", "uur1");
+                                                        één.setText(cm.toString());
+                                                        break;
+                                                    case 2:
+                                                        twee.setText(cm.toString());
+                                                        break;
+                                                    case 3:
+                                                        drie.setText(cm.toString());
+                                                        break;
+                                                    case 4:
+                                                        vier.setText(cm.toString());
+                                                        break;
+                                                    case 5:
+                                                        vijf.setText(cm.toString());
+                                                        break;
+                                                    case 6:
+                                                        zes.setText(cm.toString());
+                                                        break;
+                                                    case 7:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 8:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 9:
+                                                        negen.setText(cm.toString());
+                                                        break;
+                                                }
+                                                break;
+
+
+                                        }
+                                    }
+                                    break;
+                                case 4:
+                                    for (Courses cm : contactList) {
+                                        switch (cm.getDag()) {
+                                            case 5:
+                                                switch (cm.getPeriod()) {
+                                                    case 1:
+                                                       // Log.e("Dag", "uur1");
+                                                        één.setText(cm.toString());
+                                                        break;
+                                                    case 2:
+                                                        twee.setText(cm.toString());
+                                                        break;
+                                                    case 3:
+                                                        drie.setText(cm.toString());
+                                                        break;
+                                                    case 4:
+                                                        vier.setText(cm.toString());
+                                                        break;
+                                                    case 5:
+                                                        vijf.setText(cm.toString());
+                                                        break;
+                                                    case 6:
+                                                        zes.setText(cm.toString());
+                                                        break;
+                                                    case 7:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 8:
+                                                        acht.setText(cm.toString());
+                                                        break;
+                                                    case 9:
+                                                        negen.setText(cm.toString());
+                                                        break;
+                                                }
+                                                break;
+
+
+                                        }
+                                    }
+                                    break;
+                            }
+
+
+
+                        } catch (JSONException e) {
+                            e.printStackTrace();
+                        }
+
+                    }
+
+                },
+                new Response.ErrorListener()
+                {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+                    }
+                }
+        ) ;
+        getRequest.setRetryPolicy(new DefaultRetryPolicy(500000,
+                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
+        //Log.e("Request", getRequest.toString());
+        queue.add(getRequest);
+       // queue.add(getRequest);
+        return rootView;
+    }
+
+}
Index: app/src/main/res/layout/content_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_message.xml	(revision )
+++ app/src/main/res/layout/content_message.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.example.xavier.stageproject.MessageActivity"
+    tools:showIn="@layout/message">
+
+</RelativeLayout>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context="com.example.xavier.myapplication.MainActivity">
+
+    <android.support.design.widget.AppBarLayout
+        android:layout_height="wrap_content"
+        android:layout_width="match_parent"
+        android:theme="@style/AppTheme.AppBarOverlay">
+
+        <android.support.v7.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="?attr/colorPrimary"
+            app:popupTheme="@style/AppTheme.PopupOverlay" />
+
+    </android.support.design.widget.AppBarLayout>
+
+    <include layout="@layout/content_main" />
+
+</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,16 @@
+<resources>>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+    <style name="MyMaterialTheme" parent="MyMaterialTheme.Base">
+        <item name="android:windowContentTransitions">true</item>
+        <item name="android:windowAllowEnterTransitionOverlap">true</item>
+        <item name="android:windowAllowReturnTransitionOverlap">true</item>
+        <item name="android:windowSharedElementEnterTransition">@android:transition/move</item>
+        <item name="android:windowSharedElementExitTransition">@android:transition/move</item>
+    </style>
+</resources>
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision )
+++ .idea/modules.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/StageProject.iml" filepath="$PROJECT_DIR$/StageProject.iml" />
+      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
